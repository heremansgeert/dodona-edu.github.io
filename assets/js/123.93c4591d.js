(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{859:function(e,v,t){"use strict";t.r(v);var _=t(29),d=Object(_.a)({},(function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"ondersteuning-voor-gegevenstypes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ondersteuning-voor-gegevenstypes"}},[e._v("#")]),e._v(" Ondersteuning voor gegevenstypes")]),e._v(" "),t("p",[e._v("Deze referentie geeft een overzicht van alle gegevenstypes in TESTed (basistypes en geavanceerde types).\nZe legt ook uit hoe de verschillende types zich vertalen naar de programmeertalen die momenteel door TESTed ondersteund worden.")]),e._v(" "),t("h2",{attrs:{id:"basistypes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#basistypes"}},[e._v("#")]),e._v(" Basistypes")]),e._v(" "),t("p",[e._v("Basistypes stellen abstracte gegevenstypes voor, zoals integers, maar niet specifieke implementaties ervan, zoals een "),t("em",[e._v("unsigned 8-bit integer")]),e._v(".\nZe worden gebruikt als het standaardtype voor een concept in een programmeertaal, maar elke programmeertaal kan meerdere types hebben voor eenzelde basistype.")]),e._v(" "),t("p",[e._v("TESTed supports the following basic types:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("integer")]),e._v(": een integer")]),e._v(" "),t("li",[t("code",[e._v("real")]),e._v(": een reëel getal number")]),e._v(" "),t("li",[t("code",[e._v("boolean")]),e._v(": een Booleaanse waarde")]),e._v(" "),t("li",[t("code",[e._v("text")]),e._v(": tekstuele gegevens (bv. strings)")]),e._v(" "),t("li",[t("code",[e._v("sequence")]),e._v(": een geordende reeks waarden")]),e._v(" "),t("li",[t("code",[e._v("set")]),e._v(": een ongeordende verzameling unieke waarden")]),e._v(" "),t("li",[t("code",[e._v("map")]),e._v(": een verzameling van sleutel-waardeparen")]),e._v(" "),t("li",[t("code",[e._v("nothing")]),e._v(': een voorstelling voor "niets", dus geen waarde')]),e._v(" "),t("li",[t("code",[e._v("any")]),e._v(": eender welk gegevenstype. "),t("strong",[e._v("Opmerking")]),e._v(": u kunt dit niet gebruiken in testplannen. Het wordt enkel gebruikt om onbekende returnwaarden aan te duiden.")])]),e._v(" "),t("p",[e._v("Onderstaande tabel geeft een overzicht van alle basistypes die ondersteund worden door TESTed.\nIn de eerste kolom staan de gegevenstypes van TESTed, gevolgd door een kolom voor elke programmeertaal.")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("TESTed")]),e._v(" "),t("th",[e._v("Python")]),e._v(" "),t("th",[e._v("JavaScript")]),e._v(" "),t("th",[e._v("Java")]),e._v(" "),t("th",[e._v("Kotlin")]),e._v(" "),t("th",[e._v("Haskell")]),e._v(" "),t("th",[e._v("C")]),e._v(" "),t("th",[e._v("Bash")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("integer")]),e._v(" "),t("td",[t("code",[e._v("int")])]),e._v(" "),t("td",[t("code",[e._v("number")])]),e._v(" "),t("td",[t("code",[e._v("int")]),e._v("/"),t("code",[e._v("long")]),e._v("¹")]),e._v(" "),t("td",[t("code",[e._v("Int")])]),e._v(" "),t("td",[t("code",[e._v("Int")])]),e._v(" "),t("td",[t("code",[e._v("int")])]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("real")]),e._v(" "),t("td",[t("code",[e._v("float")])]),e._v(" "),t("td",[t("code",[e._v("number")])]),e._v(" "),t("td",[t("code",[e._v("double")])]),e._v(" "),t("td",[t("code",[e._v("Double")])]),e._v(" "),t("td",[t("code",[e._v("Double")])]),e._v(" "),t("td",[t("code",[e._v("double")])]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("boolean")]),e._v(" "),t("td",[t("code",[e._v("bool")])]),e._v(" "),t("td",[t("code",[e._v("boolean")])]),e._v(" "),t("td",[t("code",[e._v("boolean")])]),e._v(" "),t("td",[t("code",[e._v("Boolean")])]),e._v(" "),t("td",[t("code",[e._v("Bool")])]),e._v(" "),t("td",[t("code",[e._v("bool")])]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("text")]),e._v(" "),t("td",[t("code",[e._v("str")])]),e._v(" "),t("td",[t("code",[e._v("String")])]),e._v(" "),t("td",[t("code",[e._v("String")])]),e._v(" "),t("td",[t("code",[e._v("String")])]),e._v(" "),t("td",[t("code",[e._v("String")])]),e._v(" "),t("td",[t("code",[e._v("char*")])]),e._v(" "),t("td",[t("code",[e._v("text")])])]),e._v(" "),t("tr",[t("td",[e._v("sequence")]),e._v(" "),t("td",[t("code",[e._v("list")])]),e._v(" "),t("td",[t("code",[e._v("array")])]),e._v(" "),t("td",[t("code",[e._v("List")])]),e._v(" "),t("td",[t("code",[e._v("List")])]),e._v(" "),t("td",[t("code",[e._v("[]")]),e._v("²")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("set")]),e._v(" "),t("td",[t("code",[e._v("set")])]),e._v(" "),t("td",[t("code",[e._v("Set")])]),e._v(" "),t("td",[t("code",[e._v("Set")])]),e._v(" "),t("td",[t("code",[e._v("Set")])]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("map")]),e._v(" "),t("td",[t("code",[e._v("dict")])]),e._v(" "),t("td",[t("code",[e._v("object")])]),e._v(" "),t("td",[t("code",[e._v("Map")])]),e._v(" "),t("td",[t("code",[e._v("Map")])]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("nothing")]),e._v(" "),t("td",[t("code",[e._v("None")])]),e._v(" "),t("td",[t("code",[e._v("null")])]),e._v(" "),t("td",[t("code",[e._v("null")])]),e._v(" "),t("td",[t("code",[e._v("null")])]),e._v(" "),t("td",[t("code",[e._v("Nothing")])]),e._v(" "),t("td",[t("code",[e._v("void")])]),e._v(" "),t("td",[e._v("-")])])])]),e._v(" "),t("p",[e._v("¹ afhankelijk van de waarde"),t("br"),e._v("\n² het ingebouwde type voor lijsten")]),e._v(" "),t("h2",{attrs:{id:"geavanceerde-types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#geavanceerde-types"}},[e._v("#")]),e._v(" Geavanceerde types")]),e._v(" "),t("p",[e._v("Geavanceerde types stellen specifieke implementaties van gegevenstypes voor, zoals een "),t("em",[e._v("unsigned 8-bit integer")]),e._v(".\nElk geavanceerd type komt overeen met hoogstens één type in een programmeertaal, en sommige programmeertalen hebben geen ondersteuning voor bepaalde types.")]),e._v(" "),t("p",[e._v("Momenteel ondersteunt TESTed volgende types:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("int8")]),e._v(": 8-bit integers (signed)")]),e._v(" "),t("li",[t("code",[e._v("uint8")]),e._v(": 8-bit natuurlijke getallen (unsigned)")]),e._v(" "),t("li",[t("code",[e._v("int16")]),e._v(": 16-bit integers (signed)")]),e._v(" "),t("li",[t("code",[e._v("uint16")]),e._v(": 16-bit natuurlijke getallen (unsigned)")]),e._v(" "),t("li",[t("code",[e._v("int32")]),e._v(": 32-bit integers (signed)")]),e._v(" "),t("li",[t("code",[e._v("uint32")]),e._v(": 32-bit natuurlijke getallen (unsigned)")]),e._v(" "),t("li",[t("code",[e._v("int64")]),e._v(": 64-bit integers (signed)")]),e._v(" "),t("li",[t("code",[e._v("uint64")]),e._v(": 64-bit natuurlijke getallen (unsigned)")]),e._v(" "),t("li",[t("code",[e._v("bigint")]),e._v(": integers zonder onder- en bovengrens (signed)")]),e._v(" "),t("li",[t("code",[e._v("single_precision")]),e._v(" - IEEE 754 enkele precisie zwevendekommagetal")]),e._v(" "),t("li",[t("code",[e._v("double_precision")]),e._v(" - IEEE 754 dubbele precisie zwevendekommagetal")]),e._v(" "),t("li",[t("code",[e._v("double_extended")]),e._v(' - IEEE 754 "double extended" precisie zwevendekommagetal')]),e._v(" "),t("li",[t("code",[e._v("fixed_precision")]),e._v(" - vastekommagetal")]),e._v(" "),t("li",[t("code",[e._v("array")]),e._v(": een "),t("em",[e._v("mutable")]),e._v(" reeks met vaste grootte")]),e._v(" "),t("li",[t("code",[e._v("list")]),e._v(": een "),t("em",[e._v("mutable")]),e._v(" reeks met veranderlijke grootte")]),e._v(" "),t("li",[t("code",[e._v("tuple")]),e._v(": een "),t("em",[e._v("immutable")]),e._v(" reeks")]),e._v(" "),t("li",[t("code",[e._v("char")]),e._v(": één teken")]),e._v(" "),t("li",[t("code",[e._v("undefined")]),e._v(": gebruikt voor talen die een verschil hebben tussen "),t("code",[e._v("null")]),e._v(" en "),t("code",[e._v("undefined")]),e._v(", zoals in JavaScript")])]),e._v(" "),t("p",[e._v("Onderstaande tabel geeft een overzicht van alle geavanceerde types die ondersteund worden door TESTed.\nDe eerste kolom bevat alle geavanceerde types, de tweede kolom toont wat het basistype van dit type is.\nDe andere kolommen tonen de overeenkomstige types in de verschillende programmeertalen.\nDe uitleg over de gebruikte symbolen in deze kolommen staat onder de tabel.")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("TESTed")]),e._v(" "),t("th",[e._v("Basic")]),e._v(" "),t("th",[e._v("Python")]),e._v(" "),t("th",[e._v("JavaScript")]),e._v(" "),t("th",[e._v("Java")]),e._v(" "),t("th",[e._v("Kotlin")]),e._v(" "),t("th",[e._v("Haskell")]),e._v(" "),t("th",[e._v("C")]),e._v(" "),t("th",[e._v("Bash")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("int8")]),e._v(" "),t("td",[e._v("integer")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("byte")])]),e._v(" "),t("td",[t("code",[e._v("Byte")])]),e._v(" "),t("td",[t("code",[e._v("Data.Int.Int8")])]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("uint8")]),e._v(" "),t("td",[e._v("integer")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("UByte")])]),e._v(" "),t("td",[t("code",[e._v("Data.Word.Word8")])]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("int16")]),e._v(" "),t("td",[e._v("integer")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("short")])]),e._v(" "),t("td",[t("code",[e._v("Short")])]),e._v(" "),t("td",[t("code",[e._v("Data.Int.Int16")])]),e._v(" "),t("td",[t("code",[e._v("short")])]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("uint16")]),e._v(" "),t("td",[e._v("integer")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("UShort")])]),e._v(" "),t("td",[t("code",[e._v("Data.Word.Word16")])]),e._v(" "),t("td",[t("code",[e._v("unsigned short")])]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("int32")]),e._v(" "),t("td",[e._v("integer")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("int")])]),e._v(" "),t("td",[t("code",[e._v("Int")])]),e._v(" "),t("td",[t("code",[e._v("Data.Int.Int32")])]),e._v(" "),t("td",[t("code",[e._v("int")])]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("uint32")]),e._v(" "),t("td",[e._v("integer")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("UInt")])]),e._v(" "),t("td",[t("code",[e._v("Data.Word.Word32")])]),e._v(" "),t("td",[t("code",[e._v("unsigned int")])]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("int64")]),e._v(" "),t("td",[e._v("integer")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("long")])]),e._v(" "),t("td",[t("code",[e._v("Long")])]),e._v(" "),t("td",[t("code",[e._v("Data.Int.Int64")])]),e._v(" "),t("td",[t("code",[e._v("long")])]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("uint64")]),e._v(" "),t("td",[e._v("integer")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("ULong")])]),e._v(" "),t("td",[t("code",[e._v("Data.Word.Word64")])]),e._v(" "),t("td",[t("code",[e._v("unsigned long")])]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("bigint")]),e._v(" "),t("td",[e._v("integer")]),e._v(" "),t("td",[t("code",[e._v("int")])]),e._v(" "),t("td",[t("code",[e._v("BigInt")])]),e._v(" "),t("td",[t("code",[e._v("BigInteger")])]),e._v(" "),t("td",[t("code",[e._v("BigInteger")])]),e._v(" "),t("td",[t("code",[e._v("Integer")])]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("single_precision")]),e._v(" "),t("td",[e._v("real")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("float")])]),e._v(" "),t("td",[t("code",[e._v("Float")])]),e._v(" "),t("td",[t("code",[e._v("Float")])]),e._v(" "),t("td",[t("code",[e._v("float")])]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("double_precision")]),e._v(" "),t("td",[e._v("real")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("double")])]),e._v(" "),t("td",[t("code",[e._v("Double")])]),e._v(" "),t("td",[t("code",[e._v("Double")])]),e._v(" "),t("td",[t("code",[e._v("double")])]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("double_extended")]),e._v(" "),t("td",[e._v("real")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[t("code",[e._v("double double")])]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("fixed_precision")]),e._v(" "),t("td",[e._v("rational")]),e._v(" "),t("td",[t("code",[e._v("Decimal")])]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[t("code",[e._v("BigDecimal")])]),e._v(" "),t("td",[t("code",[e._v("BigDecimal")])]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("array")]),e._v(" "),t("td",[e._v("sequence")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("array")])]),e._v(" "),t("td",[t("code",[e._v("Array")])]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("list")]),e._v(" "),t("td",[e._v("sequence")]),e._v(" "),t("td",[t("code",[e._v("List")])]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("List")])]),e._v(" "),t("td",[t("code",[e._v("List")])]),e._v(" "),t("td",[t("code",[e._v("[]")]),e._v("²")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("tuple")]),e._v(" "),t("td",[e._v("sequence")]),e._v(" "),t("td",[t("code",[e._v("Tuple")])]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("()")]),e._v("¹")]),e._v(" "),t("td",[e._v("-")]),e._v(" "),t("td",[e._v("-")])]),e._v(" "),t("tr",[t("td",[e._v("char")]),e._v(" "),t("td",[e._v("text")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("char")])]),e._v(" "),t("td",[t("code",[e._v("Char")])]),e._v(" "),t("td",[t("code",[e._v("Char")])]),e._v(" "),t("td",[t("code",[e._v("char")])]),e._v(" "),t("td",[e._v("+")])]),e._v(" "),t("tr",[t("td",[e._v("undefined")]),e._v(" "),t("td",[e._v("nothing")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[t("code",[e._v("undefined")])]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("+")]),e._v(" "),t("td",[e._v("-")])])])]),e._v(" "),t("p",[e._v("¹ ingebouwd type voor tuple"),t("br"),e._v("\n² ingebouwd type voor list")]),e._v(" "),t("p",[e._v("Een plusteken (+) betekent dat de programmeertaal "),t("strong",[e._v("beperkte ondersteuning")]),e._v(" heeft voor het gegevenstype.\nDit betekent vaak dat er geen eigen type bestaat in de programmeertaal, maar dat oefeningen die het type gebruiken wel opgelost kunnen worden in de taal, doordat TESTed terugvalt op het basistype.\nLaten we tuples als voorbeeld nemen.\nVeel programmeertalen hebben geen rechtstreekse ondersteuning voor types, maar oefeningen die ervan gebruik maken kunnen opgelost worden voor het basistype ("),t("code",[e._v("sequence")]),e._v(") te gebruiken.\nEen oefening met tuples kan in Java bijvoorbeeld opgelost worden door "),t("code",[e._v("List")]),e._v(" te gebruiken.")]),e._v(" "),t("p",[e._v("Een minteken (-) betekent dat de programmeertaal "),t("strong",[e._v("geen ondersteuning")]),e._v(" heeft voor het type.\nDit betekent dat oefeningen die dergelijke types gebruikt niet oplosbaar zullen zijn in die programmeertaal.\nZo zal een oefening die vastekommagetallen gebruikt niet oplosbaar zijn in JavaScript.")])])}),[],!1,null,null,null);v.default=d.exports}}]);