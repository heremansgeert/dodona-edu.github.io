(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{779:function(e,t,a){"use strict";a.r(t);var s=a(26),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("Remark")]),e._v(" "),a("p",[e._v("Exercise templates are used when you want to make an exercise available in multiple programming languages.")])]),e._v(" "),a("h1",{attrs:{id:"template-exercise-tested"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#template-exercise-tested"}},[e._v("#")]),e._v(" Template exercise TESTed")]),e._v(" "),a("p",[e._v("TESTed is a polyglot judge, meaning it supports multiple programming languages.\nThis is achieved by using programming language independent exercises: you write one exercise, which is then solvable in multiple programming languages (see the "),a("RouterLink",{attrs:{to:"/en/tested-judge/"}},[e._v("reference on TESTed")]),e._v(" for more information).")],1),e._v(" "),a("p",[e._v("However, Dodona still expects each exercise to be for one specific programming language.\nAs a solution, this guide introduces the concept of an exercise template.\nThis is a programming language independent exercise description, which is converted to a programming language specific (and Dodona compatible) exercise by TESTed.")]),e._v(" "),a("h2",{attrs:{id:"_1-create-a-git-repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-create-a-git-repository"}},[e._v("#")]),e._v(" 1. Create a Git repository")]),e._v(" "),a("p",[e._v("Exercise templates must be located in a git repository, just as normal exercises.\nRefer to the "),a("a",{attrs:{href:"../../guides/teachers/new-exercise-repo"}},[e._v("guide on create exercise repositories")]),e._v(" for more information.")]),e._v(" "),a("h2",{attrs:{id:"_2-directory-structure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-directory-structure"}},[e._v("#")]),e._v(" 2. Directory structure")]),e._v(" "),a("p",[e._v("The directory structure for an exercise template for TESTed corresponds to a large extent with the\n"),a("a",{attrs:{href:"../../references/exercise-directory-structure"}},[e._v("expected structure by Dodona")]),e._v(".\nFor the exercise templates, the file "),a("code",[e._v("config.json")]),e._v(" is renamed to "),a("code",[e._v("config.template.json")]),e._v(".\nThe most important reason for this is that we don't want to display the template itself as an exercise in Dodona.")]),e._v(" "),a("h3",{attrs:{id:"minimal-directory-structure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minimal-directory-structure"}},[e._v("#")]),e._v(" Minimal directory structure")]),e._v(" "),a("p",[e._v("The following is an example of the minimal directory structure you'll need:")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("+-- template/exercise/directory\n|   +-- config.template.json       # Template configuration\n|   +-- evaluation                 #\n|   |   +-- plan.yaml              # DSL-test plan\n|   +-- description                #\n|   |   +-- description.nl.md.mako # Markdown exercise template for Dutch\n|   |   +-- description.en.md.mako # Markdown exercise template for English\n:   :   :\n")])])]),a("h2",{attrs:{id:"_3-create-a-test-plan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-create-a-test-plan"}},[e._v("#")]),e._v(" 3. Create a test plan")]),e._v(" "),a("p",[e._v("The tests for a TESTed exercise are written in a test plan.\nThe documentation for creating test plans can be found at  "),a("a",{attrs:{href:"../dsl"}},[e._v("TESTed DSL test plans")]),e._v(".\nWe assume that this test plan is located at "),a("code",[e._v("evaluation/plan.yaml")]),e._v(" in the repository.")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Hint for advanced users")]),e._v(" "),a("p",[e._v("You can also use "),a("a",{attrs:{href:"../json"}},[e._v("advanced test plans")]),e._v(" with the exercise templates.")])]),e._v(" "),a("h2",{attrs:{id:"_4-create-the-description-templates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-create-the-description-templates"}},[e._v("#")]),e._v(" 4. Create the description templates")]),e._v(" "),a("p",[e._v("The description templates will be written using the Mako templating system.\nSee "),a("a",{attrs:{href:"../template-description"}},[e._v("TESTed description templates")]),e._v(".\nThese description templates must be located at "),a("code",[e._v("description/description.nl.md.mako")]),e._v(" (Dutch) and\n"),a("code",[e._v("description/description.en.md.mako")]),e._v(" (English).")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Hint")]),e._v(" "),a("p",[e._v("We recommend writing the descriptions in Markdown,\nsee "),a("a",{attrs:{href:"../../references/exercise-description"}},[e._v("Exercise descriptions")]),e._v(" for the Markdown constructs supported by Dodona.")])]),e._v(" "),a("h2",{attrs:{id:"_5-configuring-the-exercise-templates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-configuring-the-exercise-templates"}},[e._v("#")]),e._v(" 5. Configuring the exercise templates")]),e._v(" "),a("p",[e._v("The general configuration of an exercise is explained in "),a("a",{attrs:{href:"../exercise-config"}},[e._v("Exercise configuration")]),e._v(".\nWe will see the specific configuration for TESTed in "),a("code",[e._v("config.template.json")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"access"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"private"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"names"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"en"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"My exercise"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"nl"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Mijn oefening"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"evaluation"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"handler"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"TESTed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"memory_limit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("500000000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"plan_name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"plan.yaml"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"labels"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("The "),a("code",[e._v("access")]),e._v("-field and the "),a("code",[e._v("description")]),e._v("-object are mandatory by Dodona.\nThe programming languages will be added to description names when an instance is generated.\nDodona also requires the "),a("code",[e._v("programming_language")]),e._v(" field,\nbut this field will be automatically filled when generating an instance.")]),e._v(" "),a("p",[e._v("For the template exercise TESTed required that the field "),a("code",[e._v("evaluation.plan_name")]),e._v(" is filled.\nThis field determines, which test plan will be used by TESTed.\nThis test plan will also be used to determine the "),a("code",[e._v("namespace")]),e._v(" used by the template descriptions,\nalso it will be used to determine for which programming languages an instances may be generated.")]),e._v(" "),a("p",[e._v("Example of final configuration file for Java:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"access"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"private"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"names"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"en"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"My exercise (java)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"nl"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Mijn oefening (java)"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"programming_language"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"java"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"evaluation"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"handler"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"TESTed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"memory_limit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("500000000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"plan_name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"plan.yaml"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"labels"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("h2",{attrs:{id:"_6-generate-the-exercise-instances"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-generate-the-exercise-instances"}},[e._v("#")]),e._v(" 6. Generate the exercise instances")]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("Remark")]),e._v(" "),a("p",[e._v("Dodona currently requires a separate exercise for each programming language.")]),e._v(" "),a("p",[e._v("We're exploring changing this in the future, with the goal of supporting multiple programming languages for the same exercise in Dodona.")])]),e._v(" "),a("p",[e._v("After writing the exercise template, we can use it to generate the programming language specific exercises.\nTESTed provides a Python script specifically created to do this.\nThis script can be found in TESTed's "),a("a",{attrs:{href:"https://github.com/dodona-edu/universal-judge",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub repository"),a("OutboundLink")],1),e._v(".\nThe script can be executed with the following command in the root directory of the GitHub repository:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ python3 -m tested.instantiate_exercise "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"template/exercise/directory"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"instance/exercise/directory"')]),e._v("\n")])])]),a("p",[e._v("This script will, for the template exercise in the directory "),a("code",[e._v("template/exercise/directory")]),e._v(",\ngenerate a programming language specific exercise in the directory "),a("code",[e._v("instance/exercise/directory/{programming_language}")]),e._v(" for each supported programming language.")]),e._v(" "),a("p",[e._v("This script has some optional options:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("-i")]),e._v(", "),a("code",[e._v("--programming_languages_included")]),e._v(":\nList of programming languages for which an exercise may be generated, if the test plan allows this.\nBy default, an exercise is generated for each programming language supported by TESTed.")]),e._v(" "),a("li",[a("code",[e._v("-e")]),e._v(", "),a("code",[e._v("--programming_languages_excluded")]),e._v(":\nList of programming languages for which no exercise may be generated.\nDefault empty.")]),e._v(" "),a("li",[a("code",[e._v("-n")]),e._v(", "),a("code",[e._v("--i18n")]),e._v(": The default natural language for the descriptions, when this can't be derived from the file name.\nOptions ‘en’ (default) and ‘nl’.")]),e._v(" "),a("li",[a("code",[e._v("-H")]),e._v(", "),a("code",[e._v("--human_readable")]),e._v(": The generated JSON-test plan from the DSL-test plan must be human-readable.")]),e._v(" "),a("li",[a("code",[e._v("-b")]),e._v(", "),a("code",[e._v("--backup_descriptions")]),e._v(": Keep existing exercise descriptions. The "),a("code",[e._v("description")]),e._v(" directory will be renamed to "),a("code",[e._v("description.bak")]),e._v(".")])])])}),[],!1,null,null,null);t.default=r.exports}}]);