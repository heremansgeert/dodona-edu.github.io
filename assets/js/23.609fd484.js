(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{708:function(e,t,a){e.exports=a.p+"assets/img/echo.64001cb2.png"},709:function(e,t,a){e.exports=a.p+"assets/img/boeketje_rozen_KleinerDan.fde62256.png"},710:function(e,t,a){e.exports=a.p+"assets/img/boeketje_rozen_GroterDan.831ec22f.png"},711:function(e,t,a){e.exports=a.p+"assets/img/spoorhekcodering_encode.c437a49c.png"},712:function(e,t,a){e.exports=a.p+"assets/img/spoorhekcodering_decode.38e00589.png"},713:function(e,t,a){e.exports=a.p+"assets/img/equal_checker.57d2eb32.png"},714:function(e,t,a){e.exports=a.p+"assets/img/link_files.c72b3b06.png"},828:function(e,t,a){"use strict";a.r(t);var n=a(26),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"documentatie-tested-dsl"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#documentatie-tested-dsl"}},[e._v("#")]),e._v(" Documentatie TESTed DSL")]),e._v(" "),n("p",[e._v("Een DSL-testplan voor TESTed wordt beschreven met behulp van YAML.\nDaarnaast volgt de DSL in grote mate de structuur waarmee Dodona de testen beschrijft.\nHet volgende codefragment geeft de structuur van DSL-testplannen weer.\nHierbij stelt het gebruik van vierkante haakjes lijsten van objecten voor.")]),e._v(" "),n("div",{staticClass:"language-text extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(". # Met top-level\n├ namespace\n├ config\n│ ├ stdout\n│ │ ├ ignoreWhitespace\n│ │ ├ caseInsensitive\n│ │ ├ tryFloatingPoint\n│ │ ├ applyRounding\n│ │ └ roundTo\n│ └ stderr\n│   └ ... # identiek aan stdout\n├ disableOptimizations\n└ tabs[]\n  ├ config\n  │ └ ... # identiek aan de config hierboven\n  ├ tab\n  └ contexts[]\n    ├ config\n    │ └ ... # identiek aan de config hierboven\n    ├ files[]\n    │ ├ name\n    │ └ url\n    ├ arguments\n    ├ stdin\n    ├ exception\n    ├ exitCode\n    ├ stderr\n    ├ stdout\n    └ testcases[] # Kan weggelaten worden wanneer de context maar één testgeval\n      │           # bevat, dus ook geen contexttestgeval.\n      ├ files[]\n      │ └ ... # identiek aan de files hierboven\n      ├ statement\n      ├ exception\n      ├ return     # ofwel 'return' ofwel 'return-raw'\n      ├ return-raw # ofwel 'return' ofwel 'return-raw'\n      ├ stderr\n      └ stdout\n      \n[] # zonder top-level\n└ ... # identiek aan de tabs hierboven\n")])])]),n("p",[e._v("In de volgende paragrafen zullen we met behulp van voorbeelden de DSL beschrijven.")]),e._v(" "),n("h2",{attrs:{id:"eenvoudige-invoer-uitvoer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eenvoudige-invoer-uitvoer"}},[e._v("#")]),e._v(" Eenvoudige invoer-uitvoer")]),e._v(" "),n("p",[e._v("De eerste soort oefeningen zijn invoer-uitvoeroefeningen.\nWe zullen een voorbeeldtestplan bekijken voor een oefening die één regel op standaardinvoer verwacht en deze terug wegschrijft naar standaarduitvoer.")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Feedback"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"invoertekst-0"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"invoertekst-0"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"invoertekst-1"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"invoertekst-1"')]),e._v("\n")])])]),n("p",[e._v("De volgende figuur visualiseert het vorige codefragment op Dodona.\nDeze figuur heeft extra annotaties van de vorm "),n("code",[e._v("[0].testcases[0].stdin")]),e._v(", deze annotaties stellen een pad voor naar een object uit het testplan.\nInterpretatie: "),n("code",[e._v("[0]")]),e._v(" het eerste tabblad, "),n("code",[e._v("contexts[0]")]),e._v(" de eerste context, "),n("code",[e._v("stdin")]),e._v(" de gegeven invoer op standaardinvoer en "),n("code",[e._v("stdout")]),e._v(" de verwachte uitvoer op standaarduitvoer.")]),e._v(" "),n("p",[n("img",{attrs:{src:a(708),alt:"Visualisatie Dodona echo oefening"}})]),e._v(" "),n("h3",{attrs:{id:"beschrijving"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beschrijving"}},[e._v("#")]),e._v(" Beschrijving")]),e._v(" "),n("h4",{attrs:{id:"objecten"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#objecten"}},[e._v("#")]),e._v(" Objecten")]),e._v(" "),n("p",[n("code",[e._v("yaml")]),e._v(" maakt gebruik van objecten om data weer te geven.\nEr wordt gebruikgemaakt van "),n("strong",[e._v("inspringsniveaus")]),e._v(" om verschillende objecten in elkaar te kunnen "),n("strong",[e._v("nesten")]),e._v(".\nObjecten bestaan uit sleutel-waardeparen, waarbij de "),n("strong",[e._v("sleutel")]),e._v(" een string is zonder witruimte die moet "),n("strong",[e._v("eindigen op een dubbelepunt")]),e._v(".\nDe waarden kunnen zowel andere objecten zijn alsook tekst, getallen, logische waarden en lijsten.")]),e._v(" "),n("p",[e._v("Voorbeelden:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("object0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n")])])]),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("root")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("child0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("subchild0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"leaf"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("subchild1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"leaf"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("child1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("subchild0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"leaf"')]),e._v("\n")])])]),n("h4",{attrs:{id:"lijsten"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lijsten"}},[e._v("#")]),e._v(" Lijsten")]),e._v(" "),n("p",[e._v("Wanneer je gebruik wilt maken van lijsten, moet de "),n("strong",[e._v("eerste sleutel")]),e._v(" van elk object in de lijst "),n("strong",[e._v("voorafgegaan")]),e._v(" worden door een "),n("strong",[e._v("liggend streepje")]),e._v(" gevolg door een "),n("strong",[e._v("spatie")]),e._v(".")]),e._v(" "),n("p",[e._v("Voorbeelden:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Item 0"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Item 1"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Item 2"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Item 3"')]),e._v("\n")])])]),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("list")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Item 0"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("items")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Item 1"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Item 2"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("items")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Item 3"')]),e._v("\n")])])]),n("h4",{attrs:{id:"testplan"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#testplan"}},[e._v("#")]),e._v(" Testplan")]),e._v(" "),n("p",[e._v("De structuur van de testplannen is een lijst op het hoogste niveau waarin tabblad-objecten bevat zijn.")]),e._v(" "),n("h4",{attrs:{id:"tabblad"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tabblad"}},[e._v("#")]),e._v(" Tabblad")]),e._v(" "),n("p",[e._v("De eerste verplichte sleutel van een tabblad is "),n("code",[e._v("tab")]),e._v(".\nDeze verwacht een string met de naam van het tabblad, zoals weergegeven op Dodona.\nDe tweede sleutel van een tabblad is "),n("code",[e._v("contexts")]),e._v(", deze verwacht een lijst met alle contexten die uitgevoerd moeten worden.")]),e._v(" "),n("h4",{attrs:{id:"context"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[e._v("#")]),e._v(" context")]),e._v(" "),n("p",[e._v("Een context is een onafhankelijk uitgevoerde testsequentie.\nVoorlopig hebben we enkel een voorbeeld van invoer-uitvoertesten.")]),e._v(" "),n("h5",{attrs:{id:"stdin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stdin"}},[e._v("#")]),e._v(" stdin")]),e._v(" "),n("p",[e._v("Het sleutelwoord "),n("code",[e._v("stdin")]),e._v(" wordt gebruikt om de standaardinvoer op te geven voor een testgeval.")]),e._v(" "),n("h5",{attrs:{id:"stdout"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stdout"}},[e._v("#")]),e._v(" stdout")]),e._v(" "),n("p",[e._v("Het sleutelwoord "),n("code",[e._v("stdout")]),e._v(" wordt gebruikt om de verwachte standaarduitvoer op te gegeven voor een testgeval.\nVoor deze uitvoer raden we aan om strings te gebruiken.\nGetallen en booleaanse waarden worden ook ondersteund, maar zullen worden vertaald naar strings.\nWe zullen naar deze datatypes refereren als tekstuele datatypes.")]),e._v(" "),n("h2",{attrs:{id:"multi-tab-en-multi-line"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#multi-tab-en-multi-line"}},[e._v("#")]),e._v(" Multi-tab en multi-line")]),e._v(" "),n("p",[e._v("We zullen nu het testplan uitbreiden met multi-line strings en meerdere tabbladen.\nHiervoor zullen we gebruikmaken van de oefening "),n("a",{attrs:{href:"https://dodona.ugent.be/nl/courses/27/activities/1047652305/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Boeketje rozen"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Kleiner dan"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"100\\n53\\n<\\n"')]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"2\\n51\\n49\\n"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Groter dan"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),n("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v("\n        34\n        4\n        >")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),n("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v("\n        2\n        2\n        32")]),e._v("\n\n")])])]),n("p",[e._v("Door een weergaveprobleem op Dodona, zijn de newlines in de beschrijvingen in de volgende figuren vervangen door spaties.\n")]),n("p",{attrs:{float:"left"}},[n("img",{attrs:{src:a(709),alt:"Boeketje rozen Kleiner Dan"}}),e._v(" "),n("img",{attrs:{src:a(710),alt:"Boeketje rozen Groter Dan"}})]),n("p"),e._v(" "),n("h3",{attrs:{id:"beschrijving-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beschrijving-2"}},[e._v("#")]),e._v(" Beschrijving")]),e._v(" "),n("h4",{attrs:{id:"multi-line"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#multi-line"}},[e._v("#")]),e._v(" Multi-line")]),e._v(" "),n("p",[e._v("Zoals zichtbaar in het testplan uit het codefragment, heeft YAML verschillende manieren om multi-line strings te ondersteunen.\nTen eerste de klassieke escape-string en een tweede notatie met ‘|’.\nDe klassieke escape-string biedt de meeste controle aan de gebruiker in verband met het gebruik van witruimte in de tekst.")]),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("Tip")]),e._v(" "),n("p",[e._v("Voor meer informatie over multi-line zie paragraaf "),n("a",{attrs:{href:"#bekende-valkuilen"}},[e._v("Bekende valkuilen")]),e._v(".")])]),e._v(" "),n("h4",{attrs:{id:"multi-tab"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#multi-tab"}},[e._v("#")]),e._v(" Multi-tab")]),e._v(" "),n("p",[e._v("Zoals uit het voorbeeld duidelijk is, kun je dus ook meerdere tabbladen gebruiken.")]),e._v(" "),n("h2",{attrs:{id:"commandolijn-argumenten-standaardfout-en-exitcode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#commandolijn-argumenten-standaardfout-en-exitcode"}},[e._v("#")]),e._v(" Commandolijn-argumenten, standaardfout en exitcode")]),e._v(" "),n("p",[e._v("We zullen nu commandolijn-argumenten, standaardfout en de exitcode toevoegen aan het testplan.\nHierbij zullen we een testplan bekijken voor een fictieve oefening van een simpele rekenmachine voor gehele getallen.")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Som"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("arguments")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-a"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"5"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"20"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"25"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("arguments")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-a"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"alpha"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"beta"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stderr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("\"'alpha' en 'beta' zijn geen geldige getallen\"")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("exitCode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Verschil"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("arguments")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-s"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"5"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"20"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-15"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("arguments")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-s"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"5"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"20"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Willekeurige invoer"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stderr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Er wordt geen invoer verwacht op stdin"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("exitCode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Product"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("arguments")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-m"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"25"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"5"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"125"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Deling"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("arguments")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-d"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"25"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"5"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"5"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("arguments")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-d"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"25"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stderr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Gehele deling door nul"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("exitCode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n")])])]),n("h3",{attrs:{id:"beschrijving-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beschrijving-3"}},[e._v("#")]),e._v(" Beschrijving")]),e._v(" "),n("h4",{attrs:{id:"arguments"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#arguments"}},[e._v("#")]),e._v(" arguments")]),e._v(" "),n("p",[e._v("Dit is een lijst met de commandolijn-argumenten die meegegeven moet worden aan het programma voor het testgeval.")]),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("Tip")]),e._v(" "),n("p",[e._v("We raden aan om strings te gebruiken voor deze argumenten maar ook de tekstuele types worden ondersteund.")])]),e._v(" "),n("h4",{attrs:{id:"stderr"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stderr"}},[e._v("#")]),e._v(" stderr")]),e._v(" "),n("p",[e._v("Hierbij wordt de verwachte standaardfout opgegeven voor een testgeval.\nDit is analoog aan "),n("code",[e._v("stdout")]),e._v(".")]),e._v(" "),n("h4",{attrs:{id:"exitcode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#exitcode"}},[e._v("#")]),e._v(" exitCode")]),e._v(" "),n("p",[e._v("Hierbij wordt de verwachte exitcode van het programma opgegeven voor een testgeval.\nDit is een geheel getal.")]),e._v(" "),n("h2",{attrs:{id:"configuratieopties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuratieopties"}},[e._v("#")]),e._v(" Configuratieopties")]),e._v(" "),n("p",[e._v("De volgende stap is het toevoegen van configuratieopties voor standaarduitvoer en standaardfout.\nHiervoor zullen we gebruikmaken van de oefening "),n("a",{attrs:{href:"https://dodona.ugent.be/nl/courses/392/series/3920/activities/726249058/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hoe slim ben jij?"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"solution"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("disableOptimizations")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tabs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Hoe slim ben jij?"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("config")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("ignoreWhitespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tryFloatingPoint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"8809"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"6"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("config")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("caseInsensitive")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("false")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("7111")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"2172"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0"')]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("config")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("applyRounding")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("roundTo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v("\n")])])]),n("h3",{attrs:{id:"beschrijving-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beschrijving-4"}},[e._v("#")]),e._v(" Beschrijving")]),e._v(" "),n("h4",{attrs:{id:"namespace"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#namespace"}},[e._v("#")]),e._v(" namespace")]),e._v(" "),n("p",[e._v("Standaard gebruikt TESTed "),n("code",[e._v("submission")]),e._v(" als namespace voor een oplossing.\nDit is bijvoorbeeld in Java echter ook de naam van de klasse die gebruikt moet worden.\nWanneer je echter als lesgever wilt dat de studenten een klasse schrijven, zal je meestal de namespace zelf willen bepalen.\nHiervoor kun je dus de namespace instellen.\nVoor de namespace gebruikt je best "),n("code",[e._v("snake_case")]),e._v(" zodat voor elke programmeertaal de juiste stijlconventie gevolgd kan worden.\nBijvoorbeeld de namespace "),n("code",[e._v("result_calculator")]),e._v(" zal een Java oplossing de klasse "),n("code",[e._v("ResultCalculator")]),e._v(" moeten bevatten.")]),e._v(" "),n("h4",{attrs:{id:"disableoptimizations"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#disableoptimizations"}},[e._v("#")]),e._v(" disableOptimizations")]),e._v(" "),n("p",[e._v("TESTed gebruikt standaard aan aantal optimalisatietechnieken om de uitvoertijd in te korten.\nDeze optimalisatietechnieken kunnen echter tot gevolg hebben dat de geoptimaliseerde code tot ongewenste resultaten kan leiden.\nDaarom kan de gebruiker deze optimalisaties uitschakelen voor het volledige testplan, moest dit nodig zijn.")]),e._v(" "),n("p",[e._v("De ongewenste resultaten zijn het gevolg van de gedeelde programma-staat tussen de verschillende contexten in de testcode.\nEen aantal mogelijk ongewenste resultaten zijn: het gebruik van gedeelde caches tussen verschillende contexten waardoor\ner een sneller uitvoer van testen bereikt wordt (niet noodzakelijk een negatief resultaat);\nachterpoorten waardoor de studenten informatie kunnen delen tussen de verschillende contexten.")]),e._v(" "),n("h4",{attrs:{id:"tabs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tabs"}},[e._v("#")]),e._v(" tabs")]),e._v(" "),n("p",[e._v("Wanneer je de "),n("code",[e._v("namespace")]),e._v(", "),n("code",[e._v("disableOptimizations")]),e._v(" of globale configuratie wenst op te geven, moet je verplicht het sleutelwoord "),n("code",[e._v("tabs")]),e._v(" gebruiken om de tabbladen op te lijsten.")]),e._v(" "),n("h4",{attrs:{id:"tekstuele-types"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tekstuele-types"}},[e._v("#")]),e._v(" Tekstuele types")]),e._v(" "),n("p",[e._v("Het tweede testgeval in het testplan voor "),n("strong",[e._v("Hoe slim ben jij?")]),e._v(", illustreert dat standaardinvoer en standaarduitvoer niet noodzakelijk strings moeten zijn.\nIn dit geval zijn het gehele getallen maar ook logische waarden en vlottende kommagetallen zijn mogelijk (de tekstuele types).")]),e._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[e._v("Opmerking")]),e._v(" "),n("p",[e._v("Om problemen te vermijden raden we aan om strings te gebruiken voor standaardinvoer, standaarduitvoer en standaardfout.\nDit komt omdat de tekstuele types omgezet zullen worden naar strings.\nVoor meer informatie over de vertaling van tekstuele types zie paragraaf "),n("a",{attrs:{href:"#bekende-valkuilen"}},[e._v("Bekende valkuilen")]),e._v(".")])]),e._v(" "),n("h4",{attrs:{id:"configuratie"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuratie"}},[e._v("#")]),e._v(" Configuratie")]),e._v(" "),n("p",[e._v("De mogelijkheid bestaat om configuratieopties mee te geven voor de verwerking van standaarduitvoer en standaardfout.\nDeze opties zijn:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("ignoreWhitespace")]),e._v(":\nNegeer witruimte voor- en achteraan de tekst bij het vergelijken van de uitvoer.")]),e._v(" "),n("li",[n("strong",[e._v("caseInsensitive")]),e._v(":\nVergelijk de uitvoer hoofdletterongevoelig.\nDus zonder een onderscheid te maken tussen hoofdletters en kleine letters.")]),e._v(" "),n("li",[n("strong",[e._v("tryFloatingPoint")]),e._v(":\nProbeer de uitvoer te vergelijken als vlottende kommagetallen.")]),e._v(" "),n("li",[n("strong",[e._v("applyRounding")]),e._v(":\nPas afronding toe bij het vergelijken van de uitvoer als vlottende kommagetallen.")]),e._v(" "),n("li",[n("strong",[e._v("roundTo")]),e._v(":\nHet aantal getallen na de komma dat je wenst te behouden na afronding.\nVerplicht op te geven wanneer je afronding wenst toe te passen.")])]),e._v(" "),n("p",[e._v("Je kunt een configuratie opgeven globaal, per tabblad, per context en/of specifiek per uitvoer.\nDeze configuratieopties worden geaccumuleerd, waarbij telkens de optie op het diepste niveau (testcase > context > tabblad > globaal) behouden wordt.")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Globaal")]),e._v(":\nGlobaal worden de opties per uitvoerstroom opgegeven in het object horende bij de optionele sleutel "),n("code",[e._v("config")]),e._v(".\nDit object heeft twee sleutels "),n("code",[e._v("stdout")]),e._v(" (opties voor standaarduitvoer) en "),n("code",[e._v("stderr")]),e._v(" (opties voor standaardfout), waarbij minstens één sleutel opgegeven moet worden.")]),e._v(" "),n("li",[n("strong",[e._v("Tabblad")]),e._v(":\nIdentiek aan "),n("strong",[e._v("globaal")]),e._v(".")]),e._v(" "),n("li",[n("strong",[e._v("Context")]),e._v(":\nIdentiek aan "),n("strong",[e._v("globaal")]),e._v(".")]),e._v(" "),n("li",[n("strong",[e._v("Specifiek")]),e._v(":\nWanneer je voor één test een specifieke configuratie wil gebruiken, geef je in plaats van de waarde een object op.\nTestgeval 3 uit het codefragment is hier een voorbeeld van.\nDit object heeft twee verplichte sleutels:\n"),n("ul",[n("li",[n("strong",[e._v("data")]),e._v(":\nDe waarde waarmee vergeleken moet worden.")]),e._v(" "),n("li",[n("strong",[e._v("config")]),e._v(":\nHet object met de configuratieparameters.")])])])]),e._v(" "),n("h2",{attrs:{id:"eenvoudige-functieoproepen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eenvoudige-functieoproepen"}},[e._v("#")]),e._v(" Eenvoudige functieoproepen")]),e._v(" "),n("p",[e._v("We zullen nu eerst een testplan bekijken voor eenvoudige functieoproepen.\nHet testplan dat we zullen bekijken is voor de oefening "),n("a",{attrs:{href:"https://dodona.ugent.be/nl/courses/392/series/3922/activities/444829407/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Spoorhekcodering"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Encode"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("expression")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'encode(\"And now for something completely different.\", 4)'")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Awsimlf.no  ohnopeyfetdnfrmtgclt irn oe ede"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("expression")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'encode(\"Yesterday is history, tomorrow is a mystery, today is a gift of God, which is why we call it the present.\", 1)'")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("return-raw")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'\"Yesterday is history, tomorrow is a mystery, today is a gift of God, which is why we call it the present.\"'")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Decode"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("expression")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'decode(\"Awsimlf.no  ohnopeyfetdnfrmtgclt irn oe ede\", 4)'")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"And now for something completely different."')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("expression")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'decode(\"Yesterday is history, tomorrow is a mystery, today is a gift of God, which is why we call it the present.\", 1)'")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Yesterday is history, tomorrow is a mystery, today is a gift of God, which is why we call it the present."')]),e._v("\n")])])]),n("p",[n("img",{attrs:{src:a(711),alt:"Spoorhekcodering Encode"}}),e._v(" "),n("img",{attrs:{src:a(712),alt:"Spoorhekcodering Decode"}})]),e._v(" "),n("h3",{attrs:{id:"beschrijving-5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beschrijving-5"}},[e._v("#")]),e._v(" Beschrijving")]),e._v(" "),n("h4",{attrs:{id:"expressie"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#expressie"}},[e._v("#")]),e._v(" Expressie")]),e._v(" "),n("p",[e._v("Bij functieoproeptesten is de invoer een statement of expressie (beiden kunnen gebruik maken van één van de twee sleutelwoorden: "),n("code",[e._v("expression")]),e._v(" of "),n("code",[e._v("statement")]),e._v(") in een testgeval uit een context.")]),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("Tip")]),e._v(" "),n("p",[e._v("Statements en expressies worden uitvoerig besproken in paragraaf "),n("a",{attrs:{href:"#statements-expressies-en-return-raw"}},[e._v("Statements, expressies en return-raw")]),e._v(".")])]),e._v(" "),n("h4",{attrs:{id:"returnwaarden"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#returnwaarden"}},[e._v("#")]),e._v(" Returnwaarden")]),e._v(" "),n("p",[e._v("We hebben twee verschillende manieren om de verwachte waarde van een expressie te noteren.\nOfwel gebruikt je het "),n("code",[e._v("return")]),e._v(", ofwel gebruik je "),n("code",[e._v("return-raw")]),e._v(".")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("return")]),e._v(":\nHierbij wordt de verwachte waarde van de expressie genoteerd met behulp van YAML-objecten.\nDe YAML-datatypes zullen vertaald worden naar de basisdatatypes van TESTed.")]),e._v(" "),n("li",[n("strong",[e._v("return-raw")]),e._v(":\nHierbij wordt de verwachte waarde van de expressie genoteerd met behulp van dezelfde grammatica als voor statements en expressies (zie paragraaf "),n("a",{attrs:{href:"#statements-expressies-en-return-raw"}},[e._v("Statements, expressies en return-raw")]),e._v(").")])]),e._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[e._v("Opmerking")]),e._v(" "),n("p",[e._v("Wanneer je een functie wil testen die geen returnwaarde heeft (niet de waarde "),n("code",[e._v("null")]),e._v(",\nbijvoorbeeld "),n("code",[e._v("void")]),e._v(" in Java),\nmag je geen "),n("code",[e._v("return")]),e._v(" of "),n("code",[e._v("return-raw")]),e._v(" opgeven.")])]),e._v(" "),n("h2",{attrs:{id:"variabeletoekenningen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#variabeletoekenningen"}},[e._v("#")]),e._v(" Variabeletoekenningen")]),e._v(" "),n("p",[e._v("We zullen nu een testplan bekijken waarbij we ook waarden aan een variabele toekennen.\nHiervoor maken we gebruik van de voorbeeldoefening "),n("a",{attrs:{href:"https://github.com/dodona-edu/universal-judge/tree/master/exercise/objects",target:"_blank",rel:"noopener noreferrer"}},[e._v("Objects"),n("OutboundLink")],1),e._v(" van TESTed.")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("namespace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"equal_checker"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tabs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Feedback"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("testcases")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("statement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'instance = new EqualChecker(5)'")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("expression")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'instance.check(25)'")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("false")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("expression")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'instance.check(5)'")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n")])])]),n("p",[n("img",{attrs:{src:a(713),alt:"Objects"}})]),e._v(" "),n("h3",{attrs:{id:"beschrijving-6"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beschrijving-6"}},[e._v("#")]),e._v(" Beschrijving")]),e._v(" "),n("p",[e._v("Binnen een context kunnen we verschillende testgevallen definiëren die afhankelijk zijn van elkaar.\nIn dit voorbeeld creëren we eerste een object, waarna er functies op dat object kunnen opgeroepen worden.")]),e._v(" "),n("p",[e._v("Dit is de belangrijkste reden om een onderscheid te maken tussen contexten en testgevallen.\nWaarbij contexten onafhankelijk van elkaar uitgevoerd kunnen worden, kunnen testgevallen binnen één context afhankelijk van elkaar zijn.")]),e._v(" "),n("h4",{attrs:{id:"testcases"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#testcases"}},[e._v("#")]),e._v(" Testcases")]),e._v(" "),n("p",[e._v("Om meerdere testgevallen in context te kunnen plaatsen, moet er gebruik gemaakt worden van het sleutelwoord "),n("code",[e._v("testcases")]),e._v(".\nDeze lijst bevat de sequentieel afhankelijke testgevallen.")]),e._v(" "),n("p",[e._v("Wanneer je naast de code zelf (of "),n("code",[e._v("main")]),e._v("-methode), ook een/meerdere functieoproeptest(en) wenst te evalueren, moet er ook gebruik gemaakt worden van de lijst van testgevallen.")]),e._v(" "),n("h2",{attrs:{id:"foutboodschappen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#foutboodschappen"}},[e._v("#")]),e._v(" Foutboodschappen")]),e._v(" "),n("p",[e._v("Een concept dat vaak gebruikt wordt in programmeertalen zijn fouten die opgegooid kunnen worden.\nOnze testplannen kunnen foutboodschappen verwachten, niet te verwarren met fouttypes (die programmeertaalafhankelijk zijn).\nHiervoor bekijken we een testplan voor de functie ‘division’.")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Delen"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("statement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'division(9, 0)'")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("exception")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Deling door nul"')]),e._v("\n")])])]),n("h3",{attrs:{id:"beschrijving-7"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beschrijving-7"}},[e._v("#")]),e._v(" Beschrijving")]),e._v(" "),n("h4",{attrs:{id:"exception"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#exception"}},[e._v("#")]),e._v(" exception")]),e._v(" "),n("p",[e._v("Hier wordt de verwachte foutboodschap opgegeven als tekstueel type.")]),e._v(" "),n("h2",{attrs:{id:"linken-bestanden"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#linken-bestanden"}},[e._v("#")]),e._v(" Linken bestanden")]),e._v(" "),n("p",[e._v("Bij sommige programmeeroefeningen moeten de studenten invoer lezen vanuit bestanden.\nBij de evaluatiefeedback wil je de student vaak de mogelijkheid bieden om de inhoud van deze bestanden te kunnen bekijken.\nHiervoor kun je op het niveau van een context en/of testgeval een lijst meegeven van alle bestanden die gelinkt moeten worden.")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Count"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("statement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'count_valid_passports(\"passports01.txt\")'")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("files")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"passports01.txt"')]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"media/workdir/passports01.txt"')]),e._v("\n")])])]),n("p",[n("img",{attrs:{src:a(714),alt:"Linken bestanden"}})]),e._v(" "),n("h3",{attrs:{id:"beschrijving-8"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beschrijving-8"}},[e._v("#")]),e._v(" Beschrijving")]),e._v(" "),n("h4",{attrs:{id:"files"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#files"}},[e._v("#")]),e._v(" files")]),e._v(" "),n("p",[e._v("Op het niveau van een context en/of testgeval kun je een lijst opgeven met de gelinkte bestanden.")]),e._v(" "),n("h4",{attrs:{id:"name"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#name"}},[e._v("#")]),e._v(" name")]),e._v(" "),n("p",[e._v("Naam van het bestand.")]),e._v(" "),n("h4",{attrs:{id:"url"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#url"}},[e._v("#")]),e._v(" url")]),e._v(" "),n("p",[e._v("Relatief pad naar het bestand, in de description map van de oefening.")]),e._v(" "),n("h2",{attrs:{id:"combinatie-van-functieoproepen-en-invoer-uitvoer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#combinatie-van-functieoproepen-en-invoer-uitvoer"}},[e._v("#")]),e._v(" Combinatie van functieoproepen en invoer-uitvoer")]),e._v(" "),n("p",[e._v("We hebben nu telkens testplannen bekeken voor ofwel invoer-uitvoer ofwel functieoproepen.\nWe kunnen deze echter combineren in één testplan.\nWe zullen hiervoor een basisrekenmachine bekijken.\nYAML ondersteunt ook commentaar.\nHierbij wordt de regel voorafgegaan door een hekje (#).")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Testen som van twee getallen")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Som"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("arguments")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-a"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"5"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"20"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"25"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("testcases")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("statement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'add(4, 16)'")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Testen verschil van twee getallen")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Verschil"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("arguments")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-s"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"5"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"20"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-15"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("testcases")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("statement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'sub(4, 16)'")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("-12")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Testen product van twee getallen")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Product"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("arguments")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-m"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"25"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"5"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"125"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("testcases")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("statement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'mul(4, 16)'")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("64")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Testen deling van twee getallen")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Deling"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("arguments")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-d"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"25"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"5"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"5"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("testcases")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("statement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'div(32, 8)'")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("arguments")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-d"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"25"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stderr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Gehele deling door nul"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("exitCode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("testcases")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("statement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'div(1, 0)'")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("exception")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Gehele deling door nul"')]),e._v("\n")])])]),n("h2",{attrs:{id:"statements-expressies-en-return-raw"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#statements-expressies-en-return-raw"}},[e._v("#")]),e._v(" Statements, expressies en return-raw")]),e._v(" "),n("p",[e._v("Hieronder zullen we de grammatica voor de statements, expressies en returnwaarden bespreken.")]),e._v(" "),n("h3",{attrs:{id:"naamgeving"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#naamgeving"}},[e._v("#")]),e._v(" Naamgeving")]),e._v(" "),n("p",[e._v("Constructor-, functie- en variabelenamen kunnen enkel bestaan uit kleine en hoofdletters uit het alfabet (zonder accenten), cijfers en een liggend streepje en mogen niet beginnen met een cijfer.")]),e._v(" "),n("h3",{attrs:{id:"datatypes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#datatypes"}},[e._v("#")]),e._v(" Datatypes")]),e._v(" "),n("p",[e._v("Onze grammatica biedt ondersteuningen voor alle datatypes van tested, zie onderstaande tabel.")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("datatype")]),e._v(" "),n("th",[e._v("Uitleg")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("nothing")]),e._v(" "),n("td",[e._v("Datatype nullwaarden")])]),e._v(" "),n("tr",[n("td",[e._v("boolean")]),e._v(" "),n("td",[e._v("Datatype booleaanse waarden")])]),e._v(" "),n("tr",[n("td",[e._v("text")]),e._v(" "),n("td",[e._v("Standaard datatype voor tekst")])]),e._v(" "),n("tr",[n("td",[e._v("char")]),e._v(" "),n("td",[e._v("Datatype enkel karakter")])]),e._v(" "),n("tr",[n("td",[e._v("integer")]),e._v(" "),n("td",[e._v("Standaard datatype voor gehele getallen")])]),e._v(" "),n("tr",[n("td",[e._v("uint8")]),e._v(" "),n("td",[e._v("Datatype 8 bit natuurlijke getallen")])]),e._v(" "),n("tr",[n("td",[e._v("int8")]),e._v(" "),n("td",[e._v("Datatype 8 bit gehele getallen")])]),e._v(" "),n("tr",[n("td",[e._v("uint16")]),e._v(" "),n("td",[e._v("Datatype 16 bit natuurlijke getallen")])]),e._v(" "),n("tr",[n("td",[e._v("int16")]),e._v(" "),n("td",[e._v("Datatype 16 bit gehele getallen")])]),e._v(" "),n("tr",[n("td",[e._v("uint32")]),e._v(" "),n("td",[e._v("Datatype 32 bit natuurlijke getallen")])]),e._v(" "),n("tr",[n("td",[e._v("int32")]),e._v(" "),n("td",[e._v("Datatype 32 bit gehele getallen")])]),e._v(" "),n("tr",[n("td",[e._v("uint64")]),e._v(" "),n("td",[e._v("Datatype 64 bit natuurlijke getallen")])]),e._v(" "),n("tr",[n("td",[e._v("int64")]),e._v(" "),n("td",[e._v("Datatype 64 bit gehele getallen")])]),e._v(" "),n("tr",[n("td",[e._v("bigint")]),e._v(" "),n("td",[e._v("Datatype grote gehele getallen (>64 bit)")])]),e._v(" "),n("tr",[n("td",[e._v("rational")]),e._v(" "),n("td",[e._v("Standaard datatype voor rationale getallen")])]),e._v(" "),n("tr",[n("td",[e._v("single")]),e._v(" "),n("td",[e._v("Datatype 32-bit vlottende kommagetallen")])]),e._v(" "),n("tr",[n("td",[e._v("double")]),e._v(" "),n("td",[e._v("Datatype 64-bit vlottende kommagetallen")])]),e._v(" "),n("tr",[n("td",[e._v("extended")]),e._v(" "),n("td",[e._v("Datatype hoge precisie vlottende kommagetallen")])]),e._v(" "),n("tr",[n("td",[e._v("fixed")]),e._v(" "),n("td",[e._v("Datatype rationale getallen met vaste precisie")])]),e._v(" "),n("tr",[n("td",[e._v("sequence")]),e._v(" "),n("td",[e._v("Standaard datatype voor sequenties")])]),e._v(" "),n("tr",[n("td",[e._v("list")]),e._v(" "),n("td",[e._v("Datatype lijsten (sequentie, dynamische lengte)")])]),e._v(" "),n("tr",[n("td",[e._v("array")]),e._v(" "),n("td",[e._v("Datatype arrays (sequentie, vaste lengte)")])]),e._v(" "),n("tr",[n("td",[e._v("tuple")]),e._v(" "),n("td",[e._v("Datatype tuples")])]),e._v(" "),n("tr",[n("td",[e._v("set")]),e._v(" "),n("td",[e._v("Datatype verzamelingen")])]),e._v(" "),n("tr",[n("td",[e._v("map")]),e._v(" "),n("td",[e._v("Datatype dictionaires (afbeeldingen)")])])])]),e._v(" "),n("h3",{attrs:{id:"waarden"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#waarden"}},[e._v("#")]),e._v(" Waarden")]),e._v(" "),n("p",[e._v("De grammatica ondersteunt getallen, booleaanse waarden, nullwaarden en strings.")]),e._v(" "),n("h4",{attrs:{id:"getallen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#getallen"}},[e._v("#")]),e._v(" Getallen")]),e._v(" "),n("p",[e._v("Zowel gehele getallen als rationale getallen worden ondersteund.\nGehele getallen gebruiken altijd de decimale notatie (bv: "),n("code",[e._v("2020")]),e._v(", "),n("code",[e._v("+5")]),e._v(", "),n("code",[e._v("−2")]),e._v(").\nRationale getallen kunnen zowel de decimale (bv: "),n("code",[e._v("2.5")]),e._v(") als wetenschappelijke notatie (bv: "),n("code",[e._v("27.15e2")]),e._v(", "),n("code",[e._v("−2e−2")]),e._v(") notatie gebruiken.")]),e._v(" "),n("h4",{attrs:{id:"booleaanse-waarden"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#booleaanse-waarden"}},[e._v("#")]),e._v(" Booleaanse waarden")]),e._v(" "),n("p",[e._v("De twee booleaanse waarden zijn "),n("code",[e._v("true")]),e._v(" (waarheidswaarde waar) en "),n("code",[e._v("false")]),e._v(" (waarheidswaarde vals).")]),e._v(" "),n("h4",{attrs:{id:"nullwaarden"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nullwaarden"}},[e._v("#")]),e._v(" Nullwaarden")]),e._v(" "),n("p",[n("code",[e._v("null")]),e._v(" en "),n("code",[e._v("undefined")]),e._v(" stellen allebei nullwaarden voor.")]),e._v(" "),n("h4",{attrs:{id:"strings"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#strings"}},[e._v("#")]),e._v(" Strings")]),e._v(" "),n("p",[e._v("Tekst of strings worden genoteerd met behulp van dubbele aanhalingstekens waarbij de speciale karakters ge-escaped worden met behulp van een backslash.\nIn onderstaande tabel is er overzicht van deze speciale karakters.")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("Beschrijving")]),e._v(" "),n("th",[e._v("Escape sequentie")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("Backslash")]),e._v(" "),n("td",[n("code",[e._v("\\\\")])])]),e._v(" "),n("tr",[n("td",[e._v("Enkele quote")]),e._v(" "),n("td",[n("code",[e._v("\\'")])])]),e._v(" "),n("tr",[n("td",[e._v("Dubbele quote")]),e._v(" "),n("td",[n("code",[e._v('\\"')])])]),e._v(" "),n("tr",[n("td",[e._v("ASCII Bell")]),e._v(" "),n("td",[n("code",[e._v("\\a")])])]),e._v(" "),n("tr",[n("td",[e._v("ASCII Backspace")]),e._v(" "),n("td",[n("code",[e._v("\\b")])])]),e._v(" "),n("tr",[n("td",[e._v("ASCII Formfeed")]),e._v(" "),n("td",[n("code",[e._v("\\f")])])]),e._v(" "),n("tr",[n("td",[e._v("ASCII Linefeed")]),e._v(" "),n("td",[n("code",[e._v("\\n")])])]),e._v(" "),n("tr",[n("td",[e._v("ASCII Carriage Return")]),e._v(" "),n("td",[n("code",[e._v("\\r")])])]),e._v(" "),n("tr",[n("td",[e._v("ASCII Horizontal tab")]),e._v(" "),n("td",[n("code",[e._v("\\t")])])]),e._v(" "),n("tr",[n("td",[e._v("ASCII Vertical tab")]),e._v(" "),n("td",[n("code",[e._v("\\v")])])]),e._v(" "),n("tr",[n("td",[e._v("Octaal karakterwaarde")]),e._v(" "),n("td",[n("code",[e._v("\\ooo")])])]),e._v(" "),n("tr",[n("td",[e._v("Hexadecimale karakterwaarde")]),e._v(" "),n("td",[n("code",[e._v("\\xhh")])])]),e._v(" "),n("tr",[n("td",[e._v("16-bit unicode karakterwaarde")]),e._v(" "),n("td",[n("code",[e._v("\\uhhhh")])])]),e._v(" "),n("tr",[n("td",[e._v("32-bit unicode karakterwaarde")]),e._v(" "),n("td",[n("code",[e._v("\\Uhhhhhhhh")])])]),e._v(" "),n("tr",[n("td",[e._v("Genaamde unicode karakter")]),e._v(" "),n("td",[n("code",[e._v("\\N{name}")])])])])]),e._v(" "),n("h4",{attrs:{id:"collecties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#collecties"}},[e._v("#")]),e._v(" Collecties")]),e._v(" "),n("p",[e._v("Er bestaan verschillende soorten collecties: sequenties, verzamelingen, tuples en dictionaires.\nWanneer collecties gebruikt worden in expressies en statements kunnen de gegevens in deze collecties zowel waarden als expressies bevatten.\nVoor de "),n("strong",[e._v("returnwaarden")]),e._v(" kunnen collecties enkel waarden bevatten en "),n("strong",[e._v("geen expressies")]),e._v(".\nDaarnaast kunnen de waarden in deze collecties heterogeen (verschillende datatypes) zijn.")]),e._v(" "),n("h5",{attrs:{id:"sequenties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sequenties"}},[e._v("#")]),e._v(" Sequenties")]),e._v(" "),n("p",[e._v("Een geordende veranderlijke collectie van objecten.\nDeze worden genoteerd met behulp van vierkante haakjes en kunnen leeg zijn.\nEnkele voorbeelden:")]),e._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("7.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"text"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),n("h5",{attrs:{id:"tuples"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tuples"}},[e._v("#")]),e._v(" Tuples")]),e._v(" "),n("p",[e._v("Een geordende onveranderlijke collectie van gegevens.\nDeze worden genoteerd met behulp van ronde haakjes en kunnen leeg zijn.\nEnkele voorbeelden:")]),e._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("7.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"text"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),n("h5",{attrs:{id:"verzamelingen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#verzamelingen"}},[e._v("#")]),e._v(" Verzamelingen")]),e._v(" "),n("p",[e._v("Een veranderlijke ongeordende collectie van unieke onveranderlijke objecten.\nDeze worden genoteerd met behulp van accolades.\nLege verzamelingen moet op een specifieke manier genoteerd worden omdat de dictionairies ook accolades gebruiken voor de notatie.\nEnkele voorbeelden:")]),e._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("7.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"text"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[e._v("Opmerking")]),e._v(" "),n("p",[e._v("Niet elke programmeertaal ondersteunt elke datatype als verzamelingselement.")])]),e._v(" "),n("h5",{attrs:{id:"dictionaries"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dictionaries"}},[e._v("#")]),e._v(" Dictionaries")]),e._v(" "),n("p",[e._v("Een veranderlijke ongeordende collectie van sleutel-waarde paren.\nWaarbij de sleutels onveranderlijk zijn, de waarden kunnen zowel veranderlijk als onveranderlijk zijn.\nDeze worden zoals verzamelingen genoteerd met behulp van accolades en kunnen leeg zijn.\nLege verzameling moeten met behulp van "),n("a",{attrs:{href:"#expliciete-typering"}},[e._v("expliciete typering")]),e._v(" genoteerd worden.\nZowel de sleutels als de waarden van deze afbeeldingen zijn kunnen van elk datatype zijn.\nEnkele voorbeelden:")]),e._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"first"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"size"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"precision"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.75")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"rounding active"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("get_id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("get_username")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[e._v("Opmerking")]),e._v(" "),n("p",[e._v("Niet elke programmeertaal ondersteunt elke datatype als sleutelwaarde.")])]),e._v(" "),n("h4",{attrs:{id:"expliciete-typering"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#expliciete-typering"}},[e._v("#")]),e._v(" Expliciete typering")]),e._v(" "),n("p",[e._v("Onze grammatica ondersteunt de mogelijkheid om de waarden (geen expressies) te voorzien van een uitdrukkelijk\nspecifiek datatype.\nHiervoor gebruiken we de notatie "),n("code",[e._v("<Waarde> :: <Datatype>")]),e._v(".\nEen lege verzameling kunnen we bijvoorbeeld op de volgende manier noteren:")]),e._v(" "),n("div",{staticClass:"language-haskell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-haskell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("::")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("set")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("::")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("set")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("::")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token hvariable"}},[e._v("set")]),e._v("\n")])])]),n("h3",{attrs:{id:"functies"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#functies"}},[e._v("#")]),e._v(" Functies")]),e._v(" "),n("p",[e._v("De argumenten van een functieoproep worden genoteerd tussen ronde haakjes.\nEen functieoproep kan zowel slaan op een globale functie of een objectfunctie.\nBijvoorbeeld:")]),e._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nobject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("get_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("get_element")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"first"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("3.4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),n("h3",{attrs:{id:"constructor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[e._v("#")]),e._v(" Constructor")]),e._v(" "),n("p",[e._v("Constructors lijken sterk op functieoproepen, maar worden voorafgegaan door het sleutelwoord "),n("code",[e._v("new")]),e._v(".\nBijvoorbeeld:")]),e._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Counter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Pair")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Paar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("8.4e-5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),n("h3",{attrs:{id:"expressie-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#expressie-2"}},[e._v("#")]),e._v(" Expressie")]),e._v(" "),n("p",[e._v("Onder expressies verstaan we waarden, functieoproepen, constructors en variabelen (en eigenschappen).")]),e._v(" "),n("h3",{attrs:{id:"variabeletoekenning"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#variabeletoekenning"}},[e._v("#")]),e._v(" Variabeletoekenning")]),e._v(" "),n("p",[e._v("Om variabelen te kunnen gebruiken, moeten we er natuurlijk waarden aan kunnen toewijzen.\nBij constructors en waarden kan het datatype afgeleid worden en moet het niet specifiek opgegeven worden.\nBij functieoproepen daarentegen moet het datatype expliciet opgegeven worden.\nBijvoorbeeld:")]),e._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[e._v("Counter counter "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Counter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\npair "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Pair")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Paar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("8.4e-5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\ntext value "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("get_value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" pair"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nnumber "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" int8\n")])])]),n("h2",{attrs:{id:"bekende-valkuilen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bekende-valkuilen"}},[e._v("#")]),e._v(" Bekende valkuilen")]),e._v(" "),n("h3",{attrs:{id:"sleutels"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sleutels"}},[e._v("#")]),e._v(" Sleutels")]),e._v(" "),n("p",[e._v("Vergeten van het dubbelepunt na een sleutelnaam in YAML.\nVoorbeeld:")]),e._v(" "),n("p",[e._v("Fout:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(' tab "Feedback"\n')])])]),n("p",[e._v("Gecorrigeerd:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Feedback"')]),e._v("\n")])])]),n("h3",{attrs:{id:"lijsten-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lijsten-2"}},[e._v("#")]),e._v(" Lijsten")]),e._v(" "),n("p",[e._v("Hierbij is het vergeten van het liggend streepje en spatie bij lijstelementen.\nOf teveel gebruiken van liggende streepjes waardoor er meer elementen in de lijst zitten dan gewenst.\nVoorbeeld:")]),e._v(" "),n("p",[e._v("Fout:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Feedback"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"input-0"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"output-0"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"input-1"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"output-1"')]),e._v("\n")])])]),n("p",[e._v("Gecorrigeerd:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tab")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Feedback"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"input-0"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"output-0"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"input-1"')]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"output-1"')]),e._v("\n")])])]),n("h3",{attrs:{id:"tekst"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tekst"}},[e._v("#")]),e._v(" Tekst")]),e._v(" "),n("p",[e._v("De verschillende manieren om strings te noteren in YAML.\nDit komt doordat al deze notaties een andere manier hebben om te gaan met witruimte.")]),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("Tip")]),e._v(" "),n("p",[e._v("Om verwarring en problemen te vermijden raden we aan om de notatie van de dubbele aanhalingstekens te gebruiken wanneer je tekstuele waarden wilt opgegeven.\nHierbij kun je speciale karakters escapen om bijvoorbeeld regeleindes aan te geven.\nWanneer je statements, expressies en ruwe returnwaarden wilt opgegeven, raden we aan om enkele aanhalingstekens te gebruiken omdat deze geen escaping toepast.")])]),e._v(" "),n("p",[e._v("Wanneer je toch een andere notatie wilt gebruiken, vind je hieronder een overzicht van de verschillende notaties en de vertaling in JSON.")]),e._v(" "),n("h4",{attrs:{id:"enkele-aanhalingstekens"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#enkele-aanhalingstekens"}},[e._v("#")]),e._v(" Enkele aanhalingstekens")]),e._v(" "),n("p",[e._v("Bij enkele aanhalingstekens worden er geen karakters ge-escaped.\nAlleen de single quote moet ge-escaped worden door te herhalen.\nVoorbeeld YAML:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("single")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" 'data''\\ndata'\n")])])]),n("p",[e._v("Vertaling JSON (YAML herschreven als JSON):")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"single"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"data\'\\\\ndata"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h4",{attrs:{id:"dubbele-aanhalingstekens"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dubbele-aanhalingstekens"}},[e._v("#")]),e._v(" Dubbele aanhalingstekens")]),e._v(" "),n("p",[e._v("Bij dubbele aanhalingstekens worden karakters wel ge-escaped.\nVoorbeeld YAML:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("double")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"data\\ndata"')]),e._v("\n")])])]),n("p",[e._v("Vertaling JSON:")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"double"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"data\\ndata"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h4",{attrs:{id:"unquoted"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#unquoted"}},[e._v("#")]),e._v(" Unquoted")]),e._v(" "),n("p",[e._v("Wanneer unquoted strings gebruikt worden, zullen er geen karakters ge-escaped worden.\nVoorbeeld YAML:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("unquoted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" data \\ data\n")])])]),n("p",[e._v("Vertaling JSON:")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"unquoted"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"data \\\\ data"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h4",{attrs:{id:"multi-line-unquoted"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#multi-line-unquoted"}},[e._v("#")]),e._v(" Multi-line Unquoted")]),e._v(" "),n("p",[e._v("Bij multi-line unquoted strings wordt een enkele newline-karakter vervangen door een spatie en wordt de witruimte rond elke regel getrimd.\nEen volledige lege regel wordt vervangen door een newline-karakter.\nVoorbeeld YAML:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("multi unquoted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  line1\n    line2\n  line3\n\n  line4\n\n\n  line5\n")])])]),n("p",[e._v("Vertaling JSON:")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"multi unquoted"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"line1 line2 line3\\nline4\\n\\nline5"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h4",{attrs:{id:"multi-line-enkele-aanhalingstekens"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#multi-line-enkele-aanhalingstekens"}},[e._v("#")]),e._v(" Multi-line enkele aanhalingstekens")]),e._v(" "),n("p",[e._v("Dit lijkt sterk op de multi-line unquoted strings.\nVoorbeeld YAML:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("multi single quoted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" 'line1''\\nline1a\n    line2\n  line3\n\n  line4\n\n\n  line5'\n")])])]),n("p",[e._v("Vertaling JSON:")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"multi single quoted"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"line1\'\\\\nline1a line2 line3\\nline4\\n\\nline5"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h4",{attrs:{id:"multi-line-dubbele-aanhalingstekens"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#multi-line-dubbele-aanhalingstekens"}},[e._v("#")]),e._v(" Multi-line dubbele aanhalingstekens")]),e._v(" "),n("p",[e._v("Dit lijkt sterk op de multi-line unquoted strings maar er kunnen karakters ge-escaped worden.\nVoorbeeld YAML:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("multi double quoted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(' "line1\\nline1a\n    line2\n  line3\n\n  line4\n\n\n  line5"\n')])])]),n("p",[e._v("Vertaling JSON:")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"multi double quoted"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"line1\\nline1a line2 line3\\nline4\\n\\nline5"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h4",{attrs:{id:"literal-block"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#literal-block"}},[e._v("#")]),e._v(" literal block")]),e._v(" "),n("p",[e._v("YAML ondersteunt verschillende bloknotaties waarbij nieuwe regels bewaard blijven.\nHierbij wordt de insprong, die afwijkt van de uitlijning niet weg getrimd.\nOok wordt er geen escaping toegepast.")]),e._v(" "),n("h5",{attrs:{id:"standaard"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#standaard"}},[e._v("#")]),e._v(" Standaard ("),n("code",[e._v("|")]),e._v(")")]),e._v(" "),n("p",[e._v("Verwijdert elke lege regel op het einde van de string, maar behoudt één newline-karakter op het einde van de string.\nVoorbeeld YAML:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("literal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),n("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v("\n  line1a\\nline1b\n    line2\n  # not a comment\n  end")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# end of statement")]),e._v("\n")])])]),n("p",[e._v("Vertaling JSON:")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"literal"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"line1a\\\\nline1b\\n  line2\\n# not a comment\\nend\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h5",{attrs:{id:"keep"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#keep"}},[e._v("#")]),e._v(" Keep ("),n("code",[e._v("|+")]),e._v(")")]),e._v(" "),n("p",[e._v("Behoudt elke lege regel op het einde van de string.\nVoorbeeld YAML:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("literal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),e._v("+\n  line1a\\nline1b\n    line2\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# not a comment")]),e._v("\n  end\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# end of statement")]),e._v("\n")])])]),n("p",[e._v("Vertaling JSON:")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"literal"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"line1a\\\\nline1b\\n  line2\\n# not a comment\\nend\\n\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h5",{attrs:{id:"trim"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#trim"}},[e._v("#")]),e._v(" Trim ("),n("code",[e._v("|-")]),e._v(")")]),e._v(" "),n("p",[e._v("Verwijdert elke lege regel op het einde van de string en heeft ook geen newline-karakter op het einde van de string.\nVoorbeeld YAML:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("literal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("\n  line1a\\nline1b\n    line2\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# not a comment")]),e._v("\n  end\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# end of statement")]),e._v("\n")])])]),n("p",[e._v("Vertaling JSON:")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"literal"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"line1a\\\\nline1b\\n  line2\\n# not a comment\\nend"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h4",{attrs:{id:"folded-block"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#folded-block"}},[e._v("#")]),e._v(" Folded block")]),e._v(" "),n("p",[e._v("YAML ondersteunt verschillende bloknotaties waarbij een regeleinde vervangen wordt door een spatie, wanneer de volgende lijn de uitlijning respecteert.\nElke lege regel wordt wel geïnterpreteerd als een nieuwe regel.\nHierbij wordt de insprong, die afwijkt van de uitlijning niet weg getrimd.\nOok wordt er geen escaping toegepast.")]),e._v(" "),n("h5",{attrs:{id:"standaard-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#standaard-2"}},[e._v("#")]),e._v(" Standaard ("),n("code",[e._v(">")]),e._v(")")]),e._v(" "),n("p",[e._v("Verwijdert elke lege regel op het einde van de string, maar behoudt één newline-karakter op het einde van de string.\nVoorbeeld YAML:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("literal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),n("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v("\n  line1a\n  line1b\n    line2")]),e._v("\n\n  line3\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# end of statement")]),e._v("\n")])])]),n("p",[e._v("Vertaling JSON:")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"literal"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"line1a line1b\\n  line2\\n\\nline3\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h5",{attrs:{id:"keep-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#keep-2"}},[e._v("#")]),e._v(" Keep ("),n("code",[e._v(">+")]),e._v(")")]),e._v(" "),n("p",[e._v("Behoudt elke lege regel op het einde van de string.\nVoorbeeld YAML:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("literal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("+\n  line1a\n  line1b\n    line2\n\n  line3\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# end of statement")]),e._v("\n")])])]),n("p",[e._v("Vertaling JSON:")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"literal"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"line1a line1b\\n  line2\\n\\nline3\\n\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h5",{attrs:{id:"trim-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#trim-2"}},[e._v("#")]),e._v(" Trim ("),n("code",[e._v(">-")]),e._v(")")]),e._v(" "),n("p",[e._v("Verwijdert elke lege regel op het einde van de string en geen newline-karakter op het einde van de string.\nVoorbeeld YAML:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("literal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("\n  line1a\n  line1b\n    line2\n\n  line3\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# end of statement")]),e._v("\n")])])]),n("p",[e._v("Vertaling JSON:")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"literal"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"line1a line1b\\n  line2\\n\\nline3"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h3",{attrs:{id:"yes-en-no"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yes-en-no"}},[e._v("#")]),e._v(" 'yes' en 'no'")]),e._v(" "),n("p",[n("code",[e._v("yes")]),e._v(" en "),n("code",[e._v("no")]),e._v(" zijn een extra notatie voor de booleaanse waarden "),n("code",[e._v("true")]),e._v(" en "),n("code",[e._v("false")]),e._v(".")]),e._v(" "),n("h3",{attrs:{id:"omzetting-naar-tekstuele-types"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#omzetting-naar-tekstuele-types"}},[e._v("#")]),e._v(" Omzetting naar tekstuele types")]),e._v(" "),n("p",[e._v("Wanneer er bij "),n("code",[e._v("stdin")]),e._v(", "),n("code",[e._v("stdout")]),e._v(" en "),n("code",[e._v("stderr")]),e._v(" geen strings gebruikt worden, maar getallen en booleaanse waarden, dan kan de uiteindelijke tekstuele data afwijken van wat je bedoelde.\nBijvoorbeeld:")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("077")]),e._v("\n")])])]),n("p",[e._v("Interpreteren als een octaal getal: "),n("code",[e._v("7 ⋅ 8 + 7 = 63")]),e._v(".")]),e._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stdin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"63"')]),e._v("\n")])])]),n("h3",{attrs:{id:"functienaam"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#functienaam"}},[e._v("#")]),e._v(" Functienaam")]),e._v(" "),n("p",[e._v("De stijlconventie voor functienamen in de DSL is "),n("code",[e._v("snake_case")]),e._v(".\nWanneer er hiervan afgeweken wordt kan de stijlconventie van een specifieke programmeertaal niet gegarandeerd worden.")]),e._v(" "),n("h2",{attrs:{id:"omzetten"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#omzetten"}},[e._v("#")]),e._v(" Omzetten")]),e._v(" "),n("p",[e._v("Om DSL-testplannen te vertalen naar de JSON-testplannen voor TESTed, kan er gebruikgemaakt worden van een Python script, dat deel uitmaakt van TESTed.\nDit script kan terug gevonden op "),n("a",{attrs:{href:"https://github.com/dodona-edu/universal-judge",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub repository"),n("OutboundLink")],1),e._v(" van TESTed.\nHet script kan uitgevoerd worden met één van de 4 volgende commando’s (en combinaties) in de root directory van de GitHub repository:")]),e._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Standaardinvoer - standaarduitvoer")]),e._v("\n$ python3 -m tested.translate_dsl "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v(" testplan.yaml "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" testplan.json\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Korte opties")]),e._v("\n$ python3 -m tested.translate_dsl -i testplan.yaml -o testplan.json\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Lange optienamen")]),e._v("\n$ python3 -m tested.translate_dsl --dsl testplan.yaml --json testplan.json\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Positionele argumenten")]),e._v("\n$ python3 -m tested.translate_dsl testplan.yaml testplan.json\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);