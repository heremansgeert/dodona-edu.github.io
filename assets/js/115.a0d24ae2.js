(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{834:function(e,n,a){"use strict";a.r(n);var t=a(26),s=Object(t.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("Opmerking")]),e._v(" "),a("p",[e._v("Oefeningssjabloonen worden gebruikt wanneer je één oefening in meerdere programmeertalen wilt aanbieden.")])]),e._v(" "),a("h1",{attrs:{id:"oefeningssjabloon-tested"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oefeningssjabloon-tested"}},[e._v("#")]),e._v(" Oefeningssjabloon TESTed")]),e._v(" "),a("p",[e._v("TESTed is een meertalige judge, waarmee we bedoelen dat TESTed meerdere programmeertalen ondersteunt.\nDit maakt het mogelijk om programmeertaalonafhankelijke oefeningen op te stellen: je schrijf één oefening,\ndie oplosbaar zal zijn in meerdere programmeertalen (zie de "),a("RouterLink",{attrs:{to:"/nl/tested-judge/"}},[e._v("TESTed-referentie")]),e._v(").")],1),e._v(" "),a("p",[e._v("Hoewel de judge meerdere programmeertalen ondersteunt, verwacht Dodona voorlopig per programmeertaal een aparte oefening.\nAls oplossing hiervoor introduceert deze handleiding het concept van oefeningssjabloonen.\nDit is een programmeertaalonafhankelijk sjabloon voor een oefening,\ndat zal worden omgezet naar een programmeertaalspecifieke (en Dodona-compatibele) oefening voor TESTed.")]),e._v(" "),a("h2",{attrs:{id:"_1-aanmaken-git-repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-aanmaken-git-repository"}},[e._v("#")]),e._v(" 1. Aanmaken Git repository")]),e._v(" "),a("p",[e._v("De oefeningen voor Dodona bevinden zich in een Git repository, zoals normale oefeningen.\nWe verwijzen naar "),a("a",{attrs:{href:"../../guides/teachers/new-exercise-repo"}},[e._v("de handleiding "),a("em",[e._v("oefening repositories aanmaken")])]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"_2-mapstructuur"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-mapstructuur"}},[e._v("#")]),e._v(" 2. Mapstructuur")]),e._v(" "),a("p",[e._v("De mapstructuur voor een oefeningssjabloon van TESTed komt in grote mate overeen met de\n"),a("a",{attrs:{href:"../../references/exercise-directory-structure"}},[e._v("vereiste structuur door Dodona")]),e._v(".\nBij de oefeningssjabloon is het "),a("code",[e._v("config.json")]),e._v(" bestand hernoemd naar "),a("code",[e._v("config.template.json")]),e._v(",\nmet als hoofdreden dat we de oefeningssjabloon niet als een oefening op Dodona willen weergeven.")]),e._v(" "),a("h3",{attrs:{id:"voorbeeld-minimale-mapstructuur"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#voorbeeld-minimale-mapstructuur"}},[e._v("#")]),e._v(" Voorbeeld minimale mapstructuur")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("+-- sjabloon/oefening/map\n|   +-- config.template.json       # Configuratie sjabloon oefening\n|   +-- evaluation                 #\n|   |   +-- plan.yaml              # DSL-testplan\n|   +-- description                #\n|   |   +-- description.nl.md.mako # Markdown sjabloonopgave nederlands\n|   |   +-- description.en.md.mako # Markdown sjabloonopgave engels\n:   :   :\n")])])]),a("h2",{attrs:{id:"_3-opstellen-testplan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-opstellen-testplan"}},[e._v("#")]),e._v(" 3. Opstellen testplan")]),e._v(" "),a("p",[e._v("De testen voor een oefening in TESTed worden geschreven in een testplan.\nDocumentatie over hoe een testplan kan worden opgesteld,\nkan gevonden worden op "),a("a",{attrs:{href:"../dsl"}},[e._v("TESTed DSL-testplannen")]),e._v(".\nWe veronderstellen dat dit testplan zich bevindt in het bestand "),a("code",[e._v("evaluation/plan.yaml")]),e._v(".")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Tip voor geavanceerde gebruikers")]),e._v(" "),a("p",[e._v("De oefeningssjabloonen kunnen ook gebruikmaken van de\n"),a("a",{attrs:{href:"../json"}},[e._v("geavanceerde testplannen")]),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"_4-opstellen-sjabloonopgaven"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-opstellen-sjabloonopgaven"}},[e._v("#")]),e._v(" 4. Opstellen sjabloonopgaven")]),e._v(" "),a("p",[e._v("De sjabloonopgaven worden geschreven met het sjablonensysteem Mako,\nzie "),a("a",{attrs:{href:"../template-description"}},[e._v("TESTed sjabloonbeschrijvingen")]),e._v(".\nDeze sjabloonopgaven moeten zich bevinden in de bestanden "),a("code",[e._v("description/description.nl.md.mako")]),e._v(" (nederlands) en\n"),a("code",[e._v("description/description.en.md.mako")]),e._v(" (engels).")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Tip")]),e._v(" "),a("p",[e._v("We raden sterk aan om de opgaven in markdown te schrijven,\nzie "),a("a",{attrs:{href:"../../references/exercise-description"}},[e._v("Oefeningbeschrijvingen")]),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"_5-configureren-van-de-oefeningssjabloon"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-configureren-van-de-oefeningssjabloon"}},[e._v("#")]),e._v(" 5. Configureren van de oefeningssjabloon")]),e._v(" "),a("p",[e._v("Het configureren van een oefening wordt uitgelegd in "),a("a",{attrs:{href:"../../references/exercise-config"}},[e._v("Oefeningconfiguratie")]),e._v(".\nWij zullen de specifieke configuratie voor TESTed in "),a("code",[e._v("config.template.json")]),e._v(" bekijken.")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"access"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"private"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"names"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"en"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"My exercise"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"nl"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Mijn oefening"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"evaluation"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"handler"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"TESTed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"memory_limit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("500000000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"plan_name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"plan.yaml"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"labels"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("Het "),a("code",[e._v("access")]),e._v("-veld en het "),a("code",[e._v("description")]),e._v("-object zijn vereist door Dodona.\nDe programmeertaal zal toegevoegd worden aan de benamingen van de oefening wanneer er een instantie gegeneerd wordt.\nDodona vereist ook het "),a("code",[e._v("programming_language")]),e._v("-veld,\nmaar deze wordt pas ingevuld tijdens het gegeneren van de instanties van de oefeningssjabloon.")]),e._v(" "),a("p",[e._v("Voor de oefeningssjabloonen vereist TESTed dat het veld "),a("code",[e._v("evaluation.plan_name")]),e._v(" ingevuld is.\nDit veld bepaalt welk testplan er zal gebruikt worden door TESTed.\nDit testplan zal ook worden gebruikt om te bepalen welke "),a("code",[e._v("namespace")]),e._v(" de sjabloonbeschrijvingen zullen gebruiken,\nalsook om te bepalen voor welke programmeertalen een instantie gegenereerd mag worden.")]),e._v(" "),a("p",[e._v("Voorbeeld finaal configuratiebestand voor Java:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"access"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"private"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"names"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"en"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"My exercise (java)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"nl"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Mijn oefening (java)"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"programming_language"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"java"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"evaluation"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"handler"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"TESTed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"memory_limit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("500000000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"plan_name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"plan.yaml"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"labels"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("h2",{attrs:{id:"_6-genereren-instanties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-genereren-instanties"}},[e._v("#")]),e._v(" 6. Genereren instanties")]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("Opmerking")]),e._v(" "),a("p",[e._v("Op dit ogenlijk vereist Dodona voor elke programmeertaal een afzonderlijke oefening.")]),e._v(" "),a("p",[e._v("In de toekomst willen we dit aanpassen,\nmet als doel meerdere programmeertalen te ondersteunen voor dezelfde oefening op Dodona.")])]),e._v(" "),a("p",[e._v("Na het opstellen van de oefeningssjabloon, kunnen we deze instantiëren voor alle vereiste programmeertalen.\nHiervoor kan er gebruikt gemaakt worden van een Python-script dat deel uitmaakt van TESTed.\nDit script kan terug gevonden worden in de\n"),a("a",{attrs:{href:"https://github.com/dodona-edu/universal-judge",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub repository"),a("OutboundLink")],1),e._v(" van TESTed.\nHet script kan uitgevoerd worden met het volgende commando in de root directory van de GitHub repository:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ python3 -m tested.instantiate_exercise "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"sjabloon/oefening/map"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"instanties/oefening/map"')]),e._v("\n")])])]),a("p",[e._v("Dit script zal, voor de oefeningssjabloon in de map "),a("code",[e._v("sjabloon/oefening/map")]),e._v(",\nper programmeertaal een instantie genereren in de map "),a("code",[e._v("instanties/oefening/map/{programmeer_taal}")]),e._v(".")]),e._v(" "),a("p",[e._v("Dit script heeft enkele optionele opties:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("-i")]),e._v(", "),a("code",[e._v("--programming_languages_included")]),e._v(":\nLijst van programmeertalen waarvoor een instantie gegenereerd mag worden indien het testplan dit toelaat.\nStandaard alle programmeertalen ondersteund door TESTed.")]),e._v(" "),a("li",[a("code",[e._v("-e")]),e._v(", "),a("code",[e._v("--programming_languages_excluded")]),e._v(":\nLijst van programmeertalen waarvoor geen instantie gegenereerd mag worden.\nStandaard een lege lijst.")]),e._v(" "),a("li",[a("code",[e._v("-n")]),e._v(", "),a("code",[e._v("--i18n")]),e._v(":\nStandaard natuurlijke taal voor de beschrijvingen, wanneer dit niet afgeleid kan worden uit de bestandsnaam.\nOpties ‘en’ (standaard) en ‘nl’.")]),e._v(" "),a("li",[a("code",[e._v("-H")]),e._v(", "),a("code",[e._v("--human_readable")]),e._v(":\nHet genereerde JSON-testplan vanuit het DSL-testplan moet leesbaar zijn door een mens.")]),e._v(" "),a("li",[a("code",[e._v("-b")]),e._v(", "),a("code",[e._v("--backup_descriptions")]),e._v(": Behoud de bestaande beschrijvingen.\nDe "),a("code",[e._v("description")]),e._v(" map zal naar "),a("code",[e._v("description.bak")]),e._v(" hernoemd worden.")])])])}),[],!1,null,null,null);n.default=s.exports}}]);