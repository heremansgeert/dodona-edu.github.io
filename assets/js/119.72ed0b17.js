(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{866:function(e,n,a){"use strict";a.r(n);var t=a(29),r=Object(t.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("Opmerking")]),e._v(" "),a("p",[e._v("Deze handleiding legt uit hoe je TESTed kunt gebruiken om programmeeroefeningen\nop te stellen in Dodona, waarvoor oplossingen kunnen ingediend worden in\nmeerdere programmeertalen.")]),e._v(" "),a("p",[e._v("Ga naar "),a("RouterLink",{attrs:{to:"/nl/tested-judge/#programmeeroefeningen-in-dodona"}},[e._v("Dodona programmeeroefeningen")]),e._v(" als je\nTESTed wil gebruiken om programmeeroefeningen op te stellen in Dodona waarvoor\nenkel oplossingen moeten ingediend worden voor één specifieke programmeertaal.")],1)]),e._v(" "),a("h1",{attrs:{id:"tested-programmeeroefeningen-voor-meerdere-programmeertalen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tested-programmeeroefeningen-voor-meerdere-programmeertalen"}},[e._v("#")]),e._v(" TESTed: programmeeroefeningen voor meerdere programmeertalen")]),e._v(" "),a("p",[e._v("TESTed is een "),a("strong",[e._v("meertalige judge")]),e._v(" die toelaat om een testplan op te stellen\nvoor een programmeeroefening, waarmee oplossingen in meerdere programmeertalen\nkunnen beoordeeld worden. Het testplan wordt dus onafhankelijk opgesteld van een\nspecifieke programmeertaal. Daardoor kan er automatisch feedback gegeven worden\nop de oefening, ongeacht de programmeertaal waarin een oplossing geschreven is.")]),e._v(" "),a("p",[e._v("De meertaligheid is uiteraard beperkt tot de "),a("RouterLink",{attrs:{to:"/nl/tested-judge/"}},[e._v("lijst van programmeertalen")]),e._v("\ndie TESTed ondersteunt. Maar als er later nieuwe programmeertalen geconfigureerd\nworden, dan kan TESTed meteen ook feedback geven voor oplossingen in die\nprogrammeertaal zonder dat het testplan van de oefening moet aangepast worden.")],1),e._v(" "),a("p",[e._v("Niet alle programmeertalen ondersteunen dezelfde taalconstructies. TESTed\nondersteunt gangbare taalconstructies die in de meeste programmeertalen\nteruggevonden worden. Als een testplan taalconstructies gebruikt die niet\nondersteund wordt in een bepaalde programmeertaal, dan zal TESTed automatisch\ndetecteren dat het voor dat testplan geen feedback kan geven op oplossingen in\ndie programmeertaal.")]),e._v(" "),a("h2",{attrs:{id:"tested-en-dodona"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tested-en-dodona"}},[e._v("#")]),e._v(" TESTed en Dodona")]),e._v(" "),a("p",[e._v("In Dodona is er momenteel een één-op-één relatie tussen een programmeeroefening\nen een programmeertaal. Als je dus in Dodona dezelfde oefening wil aanbieden\nvoor meerdere programmeertalen, dan moet je voor elke programmeertaal een\nafzonderlijke versie van de oefening maken.")]),e._v(" "),a("p",[e._v("Deze handleiding legt uit hoe je op basis van één sjabloon met een testplan voor\nTESTed, automatisch afzonderlijke versies kan genereren voor een selectie van de\nprogrammeertalen die door TESTed ondersteund worden.")]),e._v(" "),a("h2",{attrs:{id:"_1-git-repository-aanmaken"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-repository-aanmaken"}},[e._v("#")]),e._v(" 1. Git repository aanmaken")]),e._v(" "),a("p",[e._v("Als je oefeningen wil publiceren in Dodona, dan moet je ze opstellen in een Git\nrepository die aan Dodona gekoppeld is. Meerdere oefeningen kunnen vanuit\ndezelfde repository gepubliceerd worden. Meer info hierover vind je in de\nhandleiding die beschrijft hoe je een\n"),a("a",{attrs:{href:"../../guides/teachers/new-exercise-repo"}},[e._v("nieuwe repository met oefeningen")]),e._v("\naanmaakt voor Dodona.")]),e._v(" "),a("h2",{attrs:{id:"_2-map-structuur-van-het-sjabloon"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-map-structuur-van-het-sjabloon"}},[e._v("#")]),e._v(" 2. Map-structuur van het sjabloon")]),e._v(" "),a("p",[e._v("Dodona gebruikt een\n"),a("a",{attrs:{href:"../../references/exercise-directory-structure"}},[e._v("vaste map-structuur")]),e._v(" voor het\nopstellen van programmeeroefeningen. Elk map in de Git repository met een\nbestand "),a("code",[e._v("config.json")]),e._v(" wordt door Dodona beschouwd als een leeractiviteit\ndie in het leerplatform moet gepubliceerd worden. In dat configuratiebestand\nwordt onder andere vastgelegd welke judge aan de oefening gekoppeld wordt.")]),e._v(" "),a("p",[e._v("We willen in eerste instantie geen programmeeroefening maken, maar een sjabloon\nwaarmee we straks automatisch oefeningen voor verschillende programmeertalen\nzullen genereren. Dat sjabloon gebruikt ook de vaste map-structuur van Dodona,\nop één belangrijk detail na. Het bestand "),a("code",[e._v("config.json")]),e._v(" wordt vervangen door een\nbestand "),a("code",[e._v("config.template.json")]),e._v(", zodat Dodona het sjabloon zelf niet als een\noefening zal beschouwen. De map-structuur voor het sjabloon ziet er minimaal als\nvolgt uit:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("+-- sjabloon/oefening/map\n|   +-- config.template.json       # configuratiebestand voor oefening\n|   +-- evaluation                 #\n|   |   +-- testplan.yaml          # DSL-testplan\n|   +-- description                #\n|   |   +-- description.nl.md.mako # sjabloon voor beschrijving van oefening in het Nederlands en in Markdown\n|   |   +-- description.en.md.mako # sjabloon voor beschrijving van oefening in het Engels en in Markdown\n:   :   :\n")])])]),a("h2",{attrs:{id:"_2-sjabloon-configureren"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-sjabloon-configureren"}},[e._v("#")]),e._v(" 2. Sjabloon configureren")]),e._v(" "),a("p",[e._v("Het configuratiebestand "),a("code",[e._v("config.template.json")]),e._v(" van een sjabloon heeft dezelfde\ninhoud als het\n"),a("a",{attrs:{href:"../../references/exercise-config"}},[e._v("configuratiebestand van een oefening")]),e._v("\n("),a("code",[e._v("config.json")]),e._v("), behalve dat er geen programmeertaal moet ingesteld worden. Het\nconfiguratiebestand ziet er bijvoorbeeld als volgt uit:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"access"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"private"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"names"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"en"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"My exercise"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"nl"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Mijn oefening"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"evaluation"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"handler"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"TESTed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"memory_limit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("500000000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"testplan"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"testplan.yaml"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"labels"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("Daarin zien we dat TESTed ingesteld werd als de judge ("),a("code",[e._v("evalaution.handler")]),e._v(")\nvoor het beoordelen van ingediende oplossingen. Dit zal gebeuren op basis van\neen testplan ("),a("code",[e._v("evaluation.testplan")]),e._v(") dat beschreven wordt in het bestand\n("),a("code",[e._v("testplan.yaml")]),e._v("). TESTed zal automatisch controleren of er voor het testplan\neen oefening kan gegenereerd worden voor een specifieke programmeertaal.")]),e._v(" "),a("p",[e._v("Het "),a("code",[e._v("description")]),e._v("-veld met de Nederlandstalige en Engelstalige namen van de\nleeractiviteit zijn verplichte velden voor Dodona. Als TESTed op basis van het\nsjabloon een oefening genereert voor een specifieke programmeertaal, dan zal het\nvolledige configuratiebestand overgenomen worden als "),a("code",[e._v("config.json")]),e._v(", zal de\nprogrammeertaal ingesteld worden via het vereiste veld "),a("code",[e._v("programming_language")]),e._v(",\nen zal de naam van de programmeertaal tussen ronde haakjes toegevoegd worden\naan de naam van de oefening (voorafgegaan door een spaties). Voor de\nprogrammeertaal Java zal het voorbeeld configuratiebestand er dan als volgt\nuitzien:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"access"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"private"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"names"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"en"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"My exercise (java)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"nl"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Mijn oefening (java)"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"programming_language"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"java"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"evaluation"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"handler"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"TESTed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"memory_limit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("500000000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"plan_name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"testplan.yaml"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"labels"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("h2",{attrs:{id:"_3-testplan-opstellen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-testplan-opstellen"}},[e._v("#")]),e._v(" 3. Testplan opstellen")]),e._v(" "),a("p",[e._v("Het testplan van een programmeeroefening moet in de map "),a("code",[e._v("evaluation")]),e._v(" geplaatst\nworden. TESTed gebruikt testplannen die onafhankelijk van een programmeertaal\nopgesteld worden, waardoor een testplan rechtstreeks vanuit een sjabloon naar de\ngegenereerde oefeningen kan gekopieerd worden.")]),e._v(" "),a("p",[e._v("TESTed ondersteunt een "),a("a",{attrs:{href:"../dsl"}},[e._v("domeinspecifieke taal")]),e._v(" (DSL) om op een\neenvoudige manier testplannen te kunnen opstellen. In de meeste gevallen is dit\nook de aangewezen manier om testplannen op te stellen. TESTed ondersteunt ook\nmeer "),a("a",{attrs:{href:"../json"}},[e._v("geavanceerde testplannen")]),e._v(" die meer flexibiliteit bieden maar ook\neen stuk complexer zijn.")]),e._v(" "),a("p",[e._v("Bovenstaande map-structuur voor het sjabloon heeft bijvoorbeeld een DSL-testplan\n"),a("code",[e._v("testplan.yaml")]),e._v(", waarvan de extensie verraadt dat het is opgesteld in YAML.")]),e._v(" "),a("h2",{attrs:{id:"_4-sjabloon-voor-beschrijving"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-sjabloon-voor-beschrijving"}},[e._v("#")]),e._v(" 4. Sjabloon voor beschrijving")]),e._v(" "),a("p",[e._v("De beschrijving van een programmeeroefening komt in een bestand dat begint met\n"),a("code",[e._v("description")]),e._v(" en dat in de map "),a("code",[e._v("description")]),e._v(" geplaatst wordt.")]),e._v(" "),a("p",[e._v("Qua internationalisering is Dodona zowel in het Nederlands als in het Engels\nbeschikbaar. Als je in de beschrijving onderscheid wil maken tussen deze twee\ntalen, dan maak je twee bestanden. Het bestand met de Nederlandstalige\nbeschrijving gebruikt de extensie "),a("code",[e._v(".nl")]),e._v(" en het bestand met de Engelstalige\nbeschrijving gebruikt de extensie "),a("code",[e._v(".en")]),e._v(". Als een beschrijving niet moet inspelen\nop de taalinstelling van Dodona, dan gebruik je geen specifieke taal-extensie.")]),e._v(" "),a("p",[e._v("Daarnaast heb je ook de keuze om de beschrijving op te stellen in Markdown\n(extensie "),a("code",[e._v(".md")]),e._v(") of in HTML (extensie "),a("code",[e._v(".html")]),e._v(").")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Tip")]),e._v(" "),a("p",[e._v("Meer informatie over het opstellen van de beschrijving van een oefening vind je\nin "),a("a",{attrs:{href:"../../references/exercise-description"}},[e._v("deze handleiding")]),e._v(". Als je nog een\nkeuze moet maken tussen Markdown of HTML, dan is Markdown veruit het\neenvoudigste om mee te werken.")])]),e._v(" "),a("p",[e._v("Bij het opstellen van een oefening die in meerdere programmeertalen moet kunnen\nopgelost worden, past de beschrijving zich idealiter ook aan aan de gekozen\nprogrammeertaal. Deze aanpassing zit hem bijvoorbeeld in de gebruikte\n"),a("strong",[e._v("conventie voor namen")]),e._v(" (bv. "),a("em",[e._v("snake case")]),e._v(" vs. "),a("em",[e._v("camel case")]),e._v("), de gebruikte\n"),a("strong",[e._v("terminologie voor gegevenstypes")]),e._v(" (bv. in Python spreekt men bv. van een\n"),a("em",[e._v("dictionary")]),e._v(" ("),a("code",[e._v("dict")]),e._v("), waar men in Java spreekt van een hashmap ("),a("code",[e._v("HashMap")]),e._v(") of\nin JavaScript van een map ("),a("code",[e._v("Map")]),e._v(")), of de gebruikte "),a("strong",[e._v("grammatica voor\nvoorbeeldcode")]),e._v(".")]),e._v(" "),a("p",[e._v("TESTed laat toe om een "),a("a",{attrs:{href:"../template-description"}},[e._v("Mako sjabloon")]),e._v(" voor de\nbeschrijving van een oefening op te stellen. Op basis daarvan kan TESTed dan\nautomatisch de beschrijving genereren voor een specifieke programmeertaal. Als\nje dit wenst te gebruiken, dan geef je het bestand met de beschrijving een extra\nextensie "),a("code",[e._v(".mako")]),e._v(". Zo bevat het bestand "),a("code",[e._v("description.nl.md.mako")]),e._v(" het sjabloon van\nde Nederlandstalige beschrijving van een oefening in Markdown.")]),e._v(" "),a("p",[e._v("Merk op dat het gebruik van Mako sjablonen een optie is: je kan ook nog altijd\nkiezen om de beschrijving van een programmeeroefening voor meerdere\nprogrammeertalen rechtstreeks in Markdown of HTML te schrijven, als het niet\nnodig blijkt om de beschrijving aan te passen aan de programmeertaal.")]),e._v(" "),a("h2",{attrs:{id:"_5-programmeeroefeningen-genereren"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-programmeeroefeningen-genereren"}},[e._v("#")]),e._v(" 5. Programmeeroefeningen genereren")]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("Opmerking")]),e._v(" "),a("p",[e._v("Dat we op basis van het sjabloon nog afzonderlijke oefeningen moeten genereren\nvoor elke programmeertaal, is een rechtstreeks gevolg van het feit dat Dodona\nop dit ogenblik nog geen ondersteuning biedt om gebruikers te laten kiezen in\nwelke programmeertaal ze een programmeeroefeningen zullen oplossen. Als Dodona\ndit in de toekomst wel zou mogelijk maken, dan wordt deze stap zelfs overbodig.")])]),e._v(" "),a("p",[e._v("Met het sjabloon dat je in vorige stappen opgesteld hebt, kan je nu automatisch\nDodona-oefeningen genereren voor een selectie van programmeertalen. Daarvoor\ngebruik je een Python-script uit de\n"),a("a",{attrs:{href:"https://github.com/dodona-edu/universal-judge",target:"_blank",rel:"noopener noreferrer"}},[e._v("git repository"),a("OutboundLink")],1),e._v(" van TESTed.\nDit script kan op de volgende manier uitgevoerd worden in de root directory van\nde repository:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ python3 -m tested.instantiate_exercise "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("sjabloon"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("oefening"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),a("p",[e._v("Dit script gebruikt het sjabloon in de map "),a("code",[e._v("<sjabloon>")]),e._v(" om per geselecteerde\nprogrammeertaal een oefening te genereren in de map\n"),a("code",[e._v("<sjabloon>/<programmeertaal>")]),e._v(". Het script heeft de volgende opties:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("-i")]),e._v(", "),a("code",[e._v("--programming_languages_included")]),e._v(": Lijst van programmeertalen waarvoor\neen oefening mag gegenereerd worden als het testplan dit toelaat. Standaard\nzijn dit alle programmeertalen die TESTed ondersteunt.")]),e._v(" "),a("li",[a("code",[e._v("-e")]),e._v(", "),a("code",[e._v("--programming_languages_excluded")]),e._v(": Lijst van programmeertalen waarvoor\ngeen oefening mag gegenereerd mag worden. Standaard is dit een lege lijst.")]),e._v(" "),a("li",[a("code",[e._v("-n")]),e._v(", "),a("code",[e._v("--i18n")]),e._v(": Natuurlijke taal die standaard gebruikt wordt voor het\ngenereren van beschrijvingen uit Mako sjablonen als de taal niet kan afgeleid\nworden uit de bestandsextensie. Mogelijke argumenten zijn "),a("code",[e._v("en")]),e._v(" (Engels;\nstandaardwaarde) en"),a("code",[e._v("nl")]),e._v(" (Nederlands).")]),e._v(" "),a("li",[a("code",[e._v("-H")]),e._v(", "),a("code",[e._v("--human_readable")]),e._v(": Een JSON-testplan dat gegenereerd wordt uit een\nDSL-testplan zal zo leesbaar mogelijk opgemaakt worden.")]),e._v(" "),a("li",[a("code",[e._v("-b")]),e._v(", "),a("code",[e._v("--backup_descriptions")]),e._v(": Bewaar de originele beschrijvingen uit de map\n"),a("code",[e._v("description")]),e._v(" van het sjabloon in een map "),a("code",[e._v("description.bak")]),e._v(" van een\ngegenereerde oefening.")])])])}),[],!1,null,null,null);n.default=r.exports}}]);