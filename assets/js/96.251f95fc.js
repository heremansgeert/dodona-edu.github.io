(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{781:function(t,s,a){"use strict";a.r(s);var n=a(26),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"documentation-description-templates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#documentation-description-templates"}},[t._v("#")]),t._v(" Documentation description templates")]),t._v(" "),a("p",[t._v("Description templates are used to only write a description once.\nThat description can be instantiated for each programming language that is necessary with the correct names and style\nconventions.")]),t._v(" "),a("p",[t._v("Description templates are written using the Mako templating system.\nTESTed supports two markup languages for the exercises: Markdown and HTML.\nThe descriptions can be written in both English and Dutch.")]),t._v(" "),a("p",[t._v("Which parts of the description should be generated for a programming language?")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Function names")]),t._v(":\nThe style conventions for function names are programming language dependant.\nExample: Python uses the "),a("code",[t._v("snake_case")]),t._v(" convention, Java uses the "),a("code",[t._v("camelCase")]),t._v(" convention.")]),t._v(" "),a("li",[a("strong",[t._v("Type names")]),t._v(":\nOne of the larger difference between programming languages are the names that are used for the same datatype.\nFor example, 8-bit integers: in Java they're called "),a("code",[t._v("byte")]),t._v(", while Haskell uses "),a("code",[t._v("Data.Int.Int8")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("Type names in natural language")]),t._v(":\nThe type names in natural language, especially those for collections, also differ between programming languages.\nFor example, JavaScript has arrays, while Python has lists. Similarly, Java has maps, while Python has dictionaries.\nHowever, the data structures are the same for both languages.")]),t._v(" "),a("li",[a("strong",[t._v("Code examples")]),t._v(":\nThe biggest difference between programming languages is the syntax used to write code.")])]),t._v(" "),a("h2",{attrs:{id:"constants"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constants"}},[t._v("#")]),t._v(" Constants")]),t._v(" "),a("p",[t._v("First we will look at the constants that can be used in the templates.")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("prompt")]),t._v(":\nThis constant contains the prefix for the console prompt.\nIn the HTML template it will be the escaped version.\nExample: "),a("code",[t._v(">>>")]),t._v(" for Python.")]),t._v(" "),a("li",[a("strong",[t._v("language and language_html")]),t._v(":\nThese constants contain the name of the programming language for which an instance is generated.\n"),a("code",[t._v("language_html")]),t._v(" is the HTML-safe version of "),a("code",[t._v("language")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("namespace and namespace_html")]),t._v(":\nThese constants contain the "),a("code",[t._v("namespace")]),t._v(" of the code.\nThe namespace can be passed as a parameter to the conversion program.\n"),a("code",[t._v("namespace_html")]),t._v(" is the HTML-safe version of "),a("code",[t._v("namespace")]),t._v(".")])]),t._v(" "),a("p",[t._v("The constants and function calls in Mako must be notated between "),a("code",[t._v("${...}")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("p",[t._v("The first example is in Markdown for Java and Python, with the namespace "),a("code",[t._v("solution")]),t._v(".\nThe second example is in HTML for JavaScript, with the namespace "),a("code",[t._v("submission")]),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"markdown"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#markdown"}},[t._v("#")]),t._v(" Markdown")]),t._v(" "),a("p",[t._v("Template:")]),t._v(" "),a("div",{staticClass:"language-mako extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mako"}},[a("code",[t._v("The prompt for **"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("language"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("** is `"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("prompt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("`.\nThe namespace is '"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("namespace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("'.\n")])])]),a("p",[t._v("Instance Java:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("The prompt for "),a("span",{pre:!0,attrs:{class:"token bold"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("java")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("**")])]),t._v(" is "),a("span",{pre:!0,attrs:{class:"token code keyword"}},[t._v("`>`")]),t._v(".\nThe namespace is 'Solution'.\n")])])]),a("p",[t._v("Instance Python:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("The prompt for "),a("span",{pre:!0,attrs:{class:"token bold"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("python")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("**")])]),t._v(" is "),a("span",{pre:!0,attrs:{class:"token code keyword"}},[t._v("`>>>`")]),t._v(".\nThe namespace is 'solution'.\n")])])]),a("h4",{attrs:{id:"html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" HTML")]),t._v(" "),a("p",[t._v("Template:")]),t._v(" "),a("div",{staticClass:"language-mako extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mako"}},[a("code",[t._v('<p>\n    The prompt for <span style="font-weight: bold">'),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("language_html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("</span> is <code>"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("prompt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("</code>.\n    The namespace is '"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("namespace_html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("'.\n</p>\n")])])]),a("p",[t._v("Instance JavaScript:")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    The prompt for "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token style-attr"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),a("span",{pre:!0,attrs:{class:"token style language-css"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-weight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bold")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("javascript"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" is "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("code")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token entity named-entity",title:">"}},[t._v("&gt;")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("code")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(".\n    The namespace is 'submission'.\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),a("p",[t._v("As already indicated in the section "),a("a",{attrs:{href:"#constants"}},[t._v("Constants")]),t._v(" Mako also supports functions.")]),t._v(" "),a("p",[t._v("We will again given an overview of all available functions that could be used in the templates with some examples.")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("function_name")]),t._v(":\nThis function is used the generated the correct style conventions for the function names.\nThe input of this function is one string."),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Hint")]),t._v(" "),a("p",[t._v("When you pass the function name in the template, it's best to use the "),a("code",[t._v("snake_case")]),t._v(" style convention.\nThis makes it possible to generate the correct function names for each language.")])])]),t._v(" "),a("li",[a("strong",[t._v("type_name")]),t._v(":\nThis function is used to translate the TESTed datatypes to the programming language datatypes.\nThe input of this function is either a string, or a pair as type argument."),a("br"),t._v("\nThe first argument of the pair must be a collection datatype string,\nthe second either one type argument, or a list of type arguments.")]),t._v(" "),a("li",[a("strong",[t._v("natural_type_name")]),t._v(":\nThis function searches the natural name for a collection datatype and/or the string datatype of TESTed for a given\nprogramming language.\nThe input of this function is one string.")])]),t._v(" "),a("h3",{attrs:{id:"example-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-2"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("p",[t._v("Now we look at a Markdown example description for Python and JavaScript.")]),t._v(" "),a("p",[t._v("Template:")]),t._v(" "),a("div",{staticClass:"language-mako extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mako"}},[a("code",[t._v("The function "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("function_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"characterize_string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" takes one\n"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("type_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" as argument and returns the "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("natural_type_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sequence"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\nof characters of type "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("type_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sequence"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"char"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(".\n")])])]),a("p",[t._v("Instance JavaScript:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("The function "),a("span",{pre:!0,attrs:{class:"token code keyword"}},[t._v("`characterizeString`")]),t._v(" takes one\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[t._v("`string`")]),t._v(" as argument and returns the array\nof characters of type "),a("span",{pre:!0,attrs:{class:"token code keyword"}},[t._v("`array<string>`")]),t._v(".\n")])])]),a("p",[t._v("Instance Python:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("The function "),a("span",{pre:!0,attrs:{class:"token code keyword"}},[t._v("`characterize_string`")]),t._v(" takes one\n"),a("span",{pre:!0,attrs:{class:"token code keyword"}},[t._v("`str`")]),t._v(" as argument and returns the list\nof characters of type "),a("span",{pre:!0,attrs:{class:"token code keyword"}},[t._v("`List[str]`")]),t._v(".\n")])])]),a("h2",{attrs:{id:"code-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#code-examples"}},[t._v("#")]),t._v(" Code examples")]),t._v(" "),a("p",[t._v("The templates have the possibilities to notate the code examples in a "),a("em",[t._v("DOCTEST")]),t._v("-style.")]),t._v(" "),a("h3",{attrs:{id:"code-snippets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#code-snippets"}},[t._v("#")]),t._v(" Code snippets")]),t._v(" "),a("p",[t._v("The code snippets must be written in the mini-programming language of TESTed\n(see "),a("RouterLink",{attrs:{to:"/en/tested-judge/dsl/#statements-expressions-and-return-raw"}},[t._v("Statements, expressions and return-raw")]),t._v("),\nin a Python doctest-style manner.\nThe input statements and expressions must be prefixed with the "),a("em",[t._v("larger than")]),t._v(" character ("),a("code",[t._v(">")]),t._v("), the return values not.")],1),t._v(" "),a("p",[t._v("To be able to use multiple lines, we look at the balancing of the brackets.\nIn addition, you can also explicitly indicate that a statement/expression continues on the next line,\nwhen the last symbol on the line is a backslash ("),a("code",[t._v("\\")]),t._v(").")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Important")]),t._v(" "),a("p",[t._v("The code snippets are processed before the render step of the template.\nIn this process, the statements and expression are translate to the calls to the corresponding functions.\nAs a result, Mako directives cannot be used in these code snippets.")])]),t._v(" "),a("h4",{attrs:{id:"example-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-3"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("heir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"heading"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#heading"}},[t._v("#")]),t._v(" Heading")]),t._v(" "),a("p",[t._v("The code snippets that must be analysed in Markdown must start with the heading "),a("code",[t._v("```tested")]),t._v(" without whitespace in\nfront.\nThis code snippets must terminate with "),a("code",[t._v("```")]),t._v(" without whitespace in front.\nThe only limitation for the Markdown code snippets is that the lines may not start with "),a("code",[t._v("```")]),t._v(".")]),t._v(" "),a("p",[t._v("The code snippets that must be analysed in HTML are located in the tag "),a("code",[t._v("code")]),t._v(" and must have the "),a("code",[t._v("tested")]),t._v(" class.\nThe only limitation for the HTML code snippets, is that they not may contain "),a("code",[t._v("code")]),t._v(" tags inside, even in strings.")]),t._v(" "),a("h3",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),a("p",[t._v("A first example is a Markdown template with a Kotlin instance.\nA second example is a HTML template with a Haskell instance.")]),t._v(" "),a("h4",{attrs:{id:"markdown-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#markdown-2"}},[t._v("#")]),t._v(" Markdown")]),t._v(" "),a("p",[t._v("Template:")]),t._v(" "),a("div",{staticClass:"language-mako extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mako"}},[a("code",[t._v("```tested\n> heir(8, 10)\n[10, 4, 15, 11, 7, 5, 3,\n 2, 16, 12, 1, 6, 13, 9, 14, 8]\n```\n")])])]),a("p",[t._v("Instance Kotlin:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token code"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("```")]),a("span",{pre:!0,attrs:{class:"token code-language"}},[t._v("console?lang=kotlin&prompt=>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token code-block language-console language-console"}},[t._v("> heir(8, 10)\nlistOf(10, 4, 15, 11, 7, 5, 3, 2, 16, 12, 1, 6, 13, 9, 14, 8)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("```")])]),t._v("\n")])])]),a("h4",{attrs:{id:"html-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-2"}},[t._v("#")]),t._v(" HTML")]),t._v(" "),a("p",[t._v("Template:")]),t._v(" "),a("div",{staticClass:"language-mako extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mako"}},[a("code",[t._v('<div class="highlighter-rouge language-'),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("language"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('">\n<pre class="highlight"><code class="color tested code" id="code">'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v('\n> encode("And now for something completely different.",\n         1)\n"And now for something completely different."'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n</code></pre>\n</div>\n")])])]),a("p",[t._v("Instance Haskell:")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("highlighter-rouge language-haskell"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("pre")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("highlight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("code")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("color tested code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token entity named-entity",title:">"}},[t._v("&gt;")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("nf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("encode"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("("),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token entity named-entity",title:'"'}},[t._v("&quot;")]),t._v("And now for something completely different."),a("span",{pre:!0,attrs:{class:"token entity named-entity",title:'"'}},[t._v("&quot;")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(")"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("("),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("ow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("::"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("kt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Int"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(")"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token entity named-entity",title:'"'}},[t._v("&quot;")]),t._v("And now for something completely different."),a("span",{pre:!0,attrs:{class:"token entity named-entity",title:'"'}},[t._v("&quot;")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("code")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("pre")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"language-specific-information"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#language-specific-information"}},[t._v("#")]),t._v(" Language specific information")]),t._v(" "),a("p",[t._v("The Mako-templates also have conditional constructs,\nthis makes it possible to add information for only one specific programming language.")]),t._v(" "),a("h3",{attrs:{id:"example-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-4"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("p",[t._v("We will look to an example in Markdown for Java and C, but a similar structure could be used in HTML.")]),t._v(" "),a("p",[t._v("Template:")]),t._v(" "),a("div",{staticClass:"language-mako extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mako"}},[a("code",[t._v("Common text\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" language "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'java'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),t._v("\nThe function must be static declared in the class "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("namespace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(".\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")])]),t._v("\n")])])]),a("p",[t._v("Instance Java:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("Common text\n\nThe function must be static declared in the class Solution.\n")])])]),a("p",[t._v("Instance C:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("Common text\n")])])]),a("h2",{attrs:{id:"custom-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-variables"}},[t._v("#")]),t._v(" Custom variables")]),t._v(" "),a("p",[t._v("When you frequently use a name in the text, you can define a variable in Mako,\nthe advantages is avoiding multiple function calls that returns the same value.")]),t._v(" "),a("h3",{attrs:{id:"example-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-5"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("p",[t._v("We will now look at an example in Markdown without instances.")]),t._v(" "),a("div",{staticClass:"language-mako extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mako"}},[a("code",[a("span",{pre:!0,attrs:{class:"token expression-tag"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("natural_type_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\nWrite a function "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("function_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"heir"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(", which has two parameters $k$ and $n$,\nwhich have both the type "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("type_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"integer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(", you may assume that $k >= 2$.\nThe function must return a "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" of the type "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("type_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"integer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\nthat contains the order of the removed children of the circle.\nThe first removed child must be at the first position in the "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(",\nand the eventuual heir must last in the "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(".\nUse the numbers which are used to order the children in the "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(",\nas elements in the "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(".\n")])])]),a("h2",{attrs:{id:"complete-html-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#complete-html-template"}},[t._v("#")]),t._v(" Complete HTML template")]),t._v(" "),a("p",[t._v("Below follows a complete HTML template description.")]),t._v(" "),a("div",{staticClass:"language-mako extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mako"}},[a("code",[t._v('<p>\n    In the <span style="font-style: italic;">rail fence cipher</span> (also called\n    <span style="font-style: italic;">zigzag cipher</span>), the letters of the\n    plaintext are initially written downwards and diagonally on successive "rails"\n    of an imaginary fence, and then moving up after the bottom rail has been\n    reached. When the top rail is reached, the message is again written downwards\n    until the whole plaintext is written out. If the text "<code>And now for\n    something completely different.</code>" is written as such across four rails,\n    we get the following result\n</p>'),a("span",{pre:!0,attrs:{class:"token expression-tag"}},[t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" style_yellow "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'style=\"background-color:#ffff00; color:#000000;\"'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token expression-tag"}},[t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" style_grey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'style=\"color:#888888;\"'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v('\n<div class="highlighter-rouge language-python">\n<pre class="highlight"><code><span '),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_grey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong\n>A</strong></span>#####<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>w</strong></span>#####<span\n"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>s</strong></span>#####<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong\n>i</strong></span>#####<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>m</strong></span>#####<span\n"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>l</strong></span>#####<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong\n>f</strong></span>#####<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>.</strong></span></span>\n<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_grey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(">#<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>n</strong></span>###<span\n"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>o</strong></span>#<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("> </span>###<span\n"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("> </span>#<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>o</strong></span>###<span\n"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>h</strong></span>#<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>n</strong\n></span>###<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>o</strong></span>#<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n><strong>p</strong></span>###<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>e</strong></span>#<span\n"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>y</strong></span>###<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>f</strong\n></span>#<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>e</strong></span>###<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n><strong>t</strong></span>#</span>\n<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_grey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(">##<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>d</strong></span>#<span\n"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>n</strong></span>###<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>f</strong\n></span>#<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>r</strong></span>###<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n><strong>m</strong></span>#<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>t</strong></span>###<span\n"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>g</strong></span>#<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>c</strong\n></span>###<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>l</strong></span>#<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n><strong>t</strong></span>###<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("> </span>#<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n><strong>i</strong></span>###<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>r</strong></span>#<span\n"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>n</strong></span>##</span>\n<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_grey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(">###<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("> </span>#####<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n><strong>o</strong></span>#####<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>e</strong></span\n>#####<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("> </span>#####<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>e</strong\n></span>#####<span "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("><strong>d</strong></span>#####<span\n"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("style_yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('><strong>e</strong></span>###</span></code></pre>\n</div>\n\n<p>\n    The encoded message is then formed by reading the letters on each rail from\n    left to right, and going through the rails top to bottom. The encoded message\n    for the above example thus reads as\n    "<code>Awsimlf.no'),a("span",{pre:!0,attrs:{class:"token entity named-entity",title:"&nbsp;"}},[t._v("&nbsp;")]),t._v(' ohnopeyfetdnfrmtgclt irn oe ede</code>".\n</p>\n\n<h3>Assignment</h3>\n<ul>\n    <li>Write a function <code>'),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("function_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"encode"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("</code> that takes two\n    arguments:\n        <ol>\n            <li>a text string ("),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("type_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(") and</li>\n            <li>the number ("),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("type_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"integer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(") of rails used in the rail\n            fence cipher.</li>\n        </ol>\n        The function must return a string ("),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("type_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(") containing the\n        encoded message of the given text, according to the rail fence cipher with\n        the given number of rails.\n    </li>\n    <li>Write a function <code>"),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("function_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"decode"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("</code> that takes two\n    arguments:\n        <ol>\n            <li> a text ("),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("type_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(") encoded according to the rail fence\n            cipher and</li>\n            <li>the number ("),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("type_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"integer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(") of rails used in the coding\n            scheme.</li>\n        </ol>\n        The function must return a string ("),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("type_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(") containing the\n        original text after decoding.\n    </li>\n</ul>\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" language "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'java'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),t._v("\n<p> The functions must be static declared in the class "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("namespace_html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(".</p>\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")])]),t._v('\n\n<h3>Example</h3>\n\n<div class="highlighter-rouge language-'),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("language"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('">\n<pre class="highlight"><code class="tested" id="code">'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v('\n> encode("And now for something completely different.", 1)\n"And now for something completely different."\n> encode("And now for something completely different.", 2)\n"Adnwfrsmtigcmltl ifrn.n o o oehn opeeydfeet"\n\n> decode("And now for something completely different.", 1)\n"And now for something completely different."\n> decode("Adnwfrsmtigcmltl ifrn.n o o oehn opeeydfeet", 2)\n"And now for something completely different."'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n</code></pre>\n</div>\n")])])]),a("h2",{attrs:{id:"instances-of-the-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instances-of-the-template"}},[t._v("#")]),t._v(" Instances of the template")]),t._v(" "),a("p",[t._v("To instantiate the templates for a programming language, you can use a Python script that is in TESTed repository.\nThis script can be found at the "),a("a",{attrs:{href:"https://github.com/dodona-edu/universal-judge",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub repository"),a("OutboundLink")],1),t._v(" of TESTed.\nThe script can be run with one of the following commands (and combinations) in the root directory of the\nGitHub repository:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default instantiate English HTML for python with namespace 'submission'")]),t._v("\n$ python3 -m tested.description_instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" template.html.mako "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" description.html\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Short options")]),t._v("\n$ python3 -m tested.description_instance -d template.html.mako -o description.html\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Long option names")]),t._v("\n$ python3 -m tested.description_instance --description template.html.mako --output description.html\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Positional arguments")]),t._v("\n$ python3 -m tested.description_instance template.html.mako description.html\n")])])]),a("p",[t._v("The additional options are:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("Short")])]),t._v(" "),a("th",[a("strong",[t._v("Long")])]),t._v(" "),a("th",[a("strong",[t._v("Description")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("-l")])]),t._v(" "),a("td",[a("code",[t._v("--language")])]),t._v(" "),a("td",[t._v("Programming language, default 'python'")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("-i")])]),t._v(" "),a("td",[a("code",[t._v("--i18n")])]),t._v(" "),a("td",[t._v("Natural language, default 'en'")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("-n")])]),t._v(" "),a("td",[a("code",[t._v("--namespace")])]),t._v(" "),a("td",[t._v("Namespace of the exercise, default 'submission'")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("-M")])]),t._v(" "),a("td",[a("code",[t._v("--markdown")])]),t._v(" "),a("td",[t._v("Markdown template")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("-H")])]),t._v(" "),a("td",[a("code",[t._v("--html")])]),t._v(" "),a("td",[t._v("HTML template, default")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);