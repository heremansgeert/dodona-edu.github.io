(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{777:function(e,t,n){"use strict";n.r(t);var a=n(26),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[e._v("Sorry")]),e._v(" "),n("p",[e._v("For now, this page is only available in Dutch. Sorry!")])]),e._v(" "),n("h1",{attrs:{id:"configuratie-van-een-programmeertaal"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuratie-van-een-programmeertaal"}},[e._v("#")]),e._v(" Configuratie van een programmeertaal")]),e._v(" "),n("p",[e._v("In deze handleiding wordt in detail uitgelegd hoe een nieuwe programmeertaal aan TESTed kan toegevoegd worden.\nWe doen dat door te beschrijven hoe de programmeertaal C toegevoegd is.\nEnkele nuttige links die hierbij kunnen helpen zijn:")]),e._v(" "),n("ul",[n("li",[e._v("Bestaande configuraties: "),n("a",{attrs:{href:"https://github.com/dodona-edu/universal-judge/tree/master/tested/languages",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/dodona-edu/universal-judge/tree/master/tested/languages"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("Testoefeningen: "),n("a",{attrs:{href:"https://github.com/dodona-edu/universal-judge/tree/master/exercise",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/dodona-edu/universal-judge/tree/master/exercise"),n("OutboundLink")],1)])]),e._v(" "),n("p",[e._v("In deze handleiding worden regelmatig codebestanden getoond, verspreid over meerdere codefragmenten\n(bijvoorbeeld eerst "),n("code",[e._v("n")]),e._v(" regels, daarna wat tekst en dan pas de rest van de regels).")]),e._v(" "),n("h2",{attrs:{id:"tested-lokaal-uitvoeren"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tested-lokaal-uitvoeren"}},[e._v("#")]),e._v(" TESTed lokaal uitvoeren")]),e._v(" "),n("p",[e._v("Tijdens het configureren van een programmeertaal is het nuttig om TESTed lokaal uit te voeren,\nzonder daarvoor het volledige Dodona-platform te moeten uitvoeren.\nBuiten de "),n("em",[e._v("dependencies")]),e._v(" voor de bestaande programmeertalen is TESTed een Python-package,\ndat op de normale manier uitgevoerd kan worden.")]),e._v(" "),n("h3",{attrs:{id:"de-broncode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#de-broncode"}},[e._v("#")]),e._v(" De broncode")]),e._v(" "),n("p",[e._v("Na het klonen van de repository van TESTed beschikken we over volgende mappenstructuur:")]),e._v(" "),n("div",{staticClass:"language-text extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("universal-judge\n├── docker/ # Een Docker-image om TESTed uit te voeren.\n├── exercise/ # De map met oefeningen die dienen als voorbeeld en voor de tests.\n├── tested/ # Broncode van TESTed.\n├── tests/ # Testcode van TESTed.\n├── workdir/ # De uitvoer van TESTed bij manuele uitvoer.\n├── config.json # Configuratiebestand voor gebruik in Dodona.\n└── run # Wordt gebruikt door Dodona om TESTed uit te voeren.\n")])])]),n("h3",{attrs:{id:"dependencies"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dependencies"}},[e._v("#")]),e._v(" Dependencies")]),e._v(" "),n("p",[e._v("De dependencies van TESTed zelf zijn opgelijst in een "),n("code",[e._v("requirements.txt")]),e._v("-bestand, zoals gebruikelijk is bij\nPython-projecten.\nVereisten voor het uitvoeren van tests staan in "),n("code",[e._v("requirements-test.txt")]),e._v(".\nTESTed gebruikt Python 3.9 of later.\nHet installeren van deze vereisten gebeurt op de gebruikelijke manier:")]),e._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" pip "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -r requirements.txt\n")])])]),n("p",[e._v("Voor de programmeertalen die momenteel reeds geconfigureerd zijn, zijn volgende dependencies nodig:")]),e._v(" "),n("ul",[n("li",[n("p",[n("strong",[e._v("Python")]),e._v(": vereist Python 3.9.\nIndien de linter gebruikt wordt, is "),n("code",[e._v("pylint")]),e._v(" een dependency.\nDaarnaast moet "),n("code",[e._v("python")]),e._v(" beschikbaar zijn in het "),n("code",[e._v("PATH")]),e._v(".\nDoor optimalisaties is het momenteel aan te raden om dezelfde Python-versie te gebruiken voor TESTed als voor de\nPython-oefeningen.")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Java")]),e._v(": vereist Java 11, maar heeft verder geen dependencies.\nDe commando's "),n("code",[e._v("javac")]),e._v(" en "),n("code",[e._v("java")]),e._v(" moeten beschikbaar zijn in het "),n("code",[e._v("PATH")]),e._v(".")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("JavaScript")]),e._v(": vereist NodeJS v10 of later, maar heeft verder geen dependencies.\nHet commando "),n("code",[e._v("node")]),e._v(" moet beschikbaar zijn in het "),n("code",[e._v("PATH")]),e._v(".")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Kotlin")]),e._v(": vereist Kotlin 1.4.10, maar heeft verder geen dependencies.\nDe commando's "),n("code",[e._v("kotlinc")]),e._v(" en "),n("code",[e._v("kotlin")]),e._v(" moeten beschikbaar zijn in het "),n("code",[e._v("PATH")]),e._v(".")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("Haskell")]),e._v(": Voor Haskell is GHC 8.6 ("),n("code",[e._v("ghc")]),e._v(") of later nodig.\nDaarnaast is "),n("code",[e._v("aeson")]),e._v(" nodig.\nBeiden moeten globaal beschikbaar zijn in het "),n("code",[e._v("PATH")]),e._v(".")])])]),e._v(" "),n("p",[e._v("Merk op dat de dependencies voor de programmeertalen optioneel zijn.\nOm bijvoorbeeld enkel Python-oplossingen te beoordelen zijn geen andere dependencies nodig.")]),e._v(" "),n("p",[e._v("Voor de programmeertaal C gaan we gebruikmaken van GCC, waarbij versie 8.1 of later nodig is.")]),e._v(" "),n("p",[e._v("TESTed werkt op elk besturingssysteem dat ondersteund wordt door Python.\nSommige dependencies, zoals GCC, vragen wel meer moeite om te installeren op Windows.")]),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("Windows tip")]),e._v(" "),n("p",[e._v("We raden Windows 10 gebruikers aan om het "),n("a",{attrs:{href:"https://ubuntu.com/wsl",target:"_blank",rel:"noopener noreferrer"}},[e._v("Windows Subsystem for Linux"),n("OutboundLink")],1),e._v(" te gebruiken.")]),e._v(" "),n("p",[e._v("Wanneer dit niet mogelijk is, kunnen Windows gebruikers MingW of MSYS2 proberen.")])]),e._v(" "),n("h3",{attrs:{id:"uitvoeren"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#uitvoeren"}},[e._v("#")]),e._v(" Uitvoeren")]),e._v(" "),n("p",[e._v("We gaan er voor de rest van de handleiding vanuit dat commando's uitgevoerd worden in de map "),n("code",[e._v("./")]),e._v(".")]),e._v(" "),n("p",[e._v('Er zijn twee manieren om TESTed uit te voeren.\nTen eerste is er de "gewone" manier; dit is ook hoe Dodona TESTed uitvoert.\nBij het uitvoeren op deze manier zal TESTed een configuratie lezen van '),n("code",[e._v("stdin")]),e._v(" en zal TESTed het resultaat van de\nbeoordeling in Dodona-formaat uitgeschreven worden naar "),n("code",[e._v("stdout")]),e._v(".")]),e._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" python -m tested\n")])])]),n("p",[e._v("Bij het configureren van een programmeertaal of het werken aan TESTed is het echter nuttiger om meer uitvoer te zien en\nis het vervelend om telkens een configuratie te lezen vanop "),n("code",[e._v("stdin")]),e._v(". Daarom is er een tweede manier:")]),e._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" python -m tested.manual\n")])])]),n("p",[e._v("Deze uitvoer verschilt op een aantal vlakken van de gewone uitvoering:")]),e._v(" "),n("ol",[n("li",[e._v("Er wordt geen configuratie gelezen van "),n("code",[e._v("stdin")]),e._v(".\nDe configuratie is gedefinieerd in de code zelf en gebruikt een van de oefeningen die in de map "),n("code",[e._v("exercise")]),e._v(" zitten.")]),e._v(" "),n("li",[e._v("Er worden, naast de resultaten van de beoordeling, logs uitgeschreven naar "),n("code",[e._v("stdout")]),e._v(" die aangeven wat TESTed doet.\nAls er bijvoorbeeld een fout optreedt tijdens het compileren zullen deze logs nuttig zijn: zo wordt uitgeschreven\nwelk commando TESTed exact uitvoert voor de compilatie en ook in welke map dat gebeurt.")]),e._v(" "),n("li",[e._v("De configuratie is zo opgesteld dat de werkmap van de judge de map "),n("code",[e._v("workdir")]),e._v(" zal zijn. Dit laat toe om de\ngegenereerde code te inspecteren.")])]),e._v(" "),n("h2",{attrs:{id:"globaal-stappenplan-voor-het-configureren-van-een-programmeertaal"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#globaal-stappenplan-voor-het-configureren-van-een-programmeertaal"}},[e._v("#")]),e._v(" Globaal stappenplan voor het configureren van een programmeertaal")]),e._v(" "),n("p",[e._v("Het configureren van een programmeertaal in TESTed bestaat uit drie grote onderdelen:")]),e._v(" "),n("ol",[n("li",[e._v("Het configuratiebestand, met enkele opties voor de programmeertaal.\nHet typeconfiguratiebestand, met de benaming van de datatypes.")]),e._v(" "),n("li",[e._v("De configuratieklasse, met de meer dynamische opties, zoals het compilatiecommando.")]),e._v(" "),n("li",[e._v("De sjablonen, die gebruikt worden om code te genereren.")])]),e._v(" "),n("p",[e._v("TESTed voorziet een hulpmiddel om de bestanden op de juiste plaats te genereren.\nOp basis van enkele vragen worden "),n("em",[e._v("stubs")]),e._v(" gegenereerd voor het configuratiebestand,\nde configuratieklasse en de sjablonen.\nDit hulpmiddel kan als volgt uitgevoerd worden:")]),e._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" python -m tested.generation\n")])])]),n("p",[e._v("Merk op dat dit enkel bestanden genereert.\nDe stappen in "),n("a",{attrs:{href:"#registratie"}},[e._v("Registratie")]),e._v(" voor het registreren van de nieuwe programmeertaal in zijn nog steeds nodig.")]),e._v(" "),n("p",[e._v("We overlopen nu elk onderdeel in functie van de programmeertaal C.\nWe gaan er telkens vanuit dat bovenstaande hulpmiddel niet gebruikt is en dat de bestanden dus nog gemaakt moeten worden.\nIs bovenstaande hulpmiddel wel gebruikt, dan kunnen de instructies voor het maken van bestanden genegeerd worden.")]),e._v(" "),n("h2",{attrs:{id:"de-programmeertaal-c"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#de-programmeertaal-c"}},[e._v("#")]),e._v(" De programmeertaal C")]),e._v(" "),n("p",[e._v("Voor we beginnen aan de configuratie, overlopen we kort welke functionaliteit we willen ondersteunen:\nwelke functionaliteit uit C kunnen we aanbieden in TESTed en welke functionaliteit uit TESTed kunnen we implementeren in\nC?\nUiteraard willen we zoveel mogelijk ondersteunen, maar vooral op het vlak van gegevenstypes zijn er momenteel beperkingen.")]),e._v(" "),n("h5",{attrs:{id:"welke-basistypes-gaan-we-niet-ondersteunen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#welke-basistypes-gaan-we-niet-ondersteunen"}},[e._v("#")]),e._v(" Welke basistypes gaan we niet ondersteunen?")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("sequence")]),e._v(":\nArrays zijn een speciaal geval in C: statische arrays kunnen bijvoorbeeld niet als returnwaarde dienen, en ook als\nfunctieargument zijn ze niet ideaal.\nDynamische arrays nemen de vorm aan van een pointer en een grootte.\nTESTed heeft momenteel geen ondersteuning voor datatypes die als twee waarden geïmplementeerd moeten worden,\ndus worden arrays momenteel niet ondersteund.")]),e._v(" "),n("li",[n("code",[e._v("set")]),e._v(":\nC heeft geen ingebouwde verzamelingen.")]),e._v(" "),n("li",[n("code",[e._v("map")]),e._v(":\nC heeft geen ingebouwde map of dict.\nEr zijn wel structs, maar daarvan is het niet mogelijk om de velden at runtime op te vragen,\nwaardoor we ze niet kunnen serialiseren.")])]),e._v(" "),n("h5",{attrs:{id:"welke-geavanceerde-types-gaan-we-niet-ondersteunen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#welke-geavanceerde-types-gaan-we-niet-ondersteunen"}},[e._v("#")]),e._v(" Welke geavanceerde types gaan we niet ondersteunen?")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("big_int")]),e._v(":\nC heeft geen ingebouwd type voor getallen van arbitraire grootte.")]),e._v(" "),n("li",[n("code",[e._v("fixed_precision")]),e._v(":\nC heeft geen ingebouwd type voor kommagetallen met willekeurige precisie.")]),e._v(" "),n("li",[n("strong",[e._v("Andere datastructuren")]),e._v(":\nHet gaat hier om datastructuren zoals "),n("code",[e._v("array")]),e._v(" en "),n("code",[e._v("list")]),e._v(" (om dezelfde redenen als hierboven).\nOok "),n("code",[e._v("tuple")]),e._v(" wordt niet ondersteund, omdat het niet bestaat in C.")])]),e._v(" "),n("h3",{attrs:{id:"locatie-van-de-code"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#locatie-van-de-code"}},[e._v("#")]),e._v(" Locatie van de code")]),e._v(" "),n("p",[e._v("De eerste stap in het configureren van een programmeertaal is het aanmaken van een map waarin we de code voor de\nprogrammeertaal zullen zetten.\nDeze map moet de naam van de programmeertaal krijgen en op de juiste plaats binnen TESTed aanwezig zijn.\nMaak een nieuwe map "),n("code",[e._v("tested/languages/c")]),e._v(".\nNa het aanmaken van de map moet de mappenstructuur er zo uitzien:")]),e._v(" "),n("div",{staticClass:"language-text extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("universal-judge/\n├─ tested/\n│ ├─ languages/\n│ │ ├── c/ &lt;- nieuwe map\n│ │ ├── haskell/\n│ │ ├── java/\n│ │ ├── python/\n│ │ ├── config.py\n│ │ ...\n│ ...\n...\n")])])]),n("h3",{attrs:{id:"configuratiebestanden"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuratiebestanden"}},[e._v("#")]),e._v(" Configuratiebestanden")]),e._v(" "),n("p",[e._v("Het configuratiebestand is een JSON-bestand met enkele eigenschappen van de programmeertaal.\nDit configuratiebestand maakt het implementeren van de configuratieklasse een stuk eenvoudiger, omdat de implementatie\nvan die klasse daardoor veel minder lang zal zijn.\nMaak eerst het configuratiebestand aan: "),n("code",[e._v("tested/languages/c/config.json")]),e._v(".")]),e._v(" "),n("p",[e._v("Merk op dat het configuratiebestand slechts een hulpmiddel is: indien gewenst kunnen al deze opties ook ingesteld worden\ndoor de juiste methodes te implementeren in de configuratieklasse, maar we verwachten dat dit in veel gevallen niet\nnodig zal zijn.")]),e._v(" "),n("h4",{attrs:{id:"algemene-opties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#algemene-opties"}},[e._v("#")]),e._v(" Algemene opties")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("general.dependencies")]),e._v(":\nDit zijn bestanden die beschikbaar zullen zijn tijdens het compileren en tijdens het uitvoeren van de beoordeling.\nDit betekent dat deze dependencies gebruikt kunnen worden in de testcode voor de contexten en de evaluatiecode voor de\ngeprogrammeerde en programmeertaalspecifieke code.\nIn het geval van C is dit de "),n("code",[e._v("values")]),e._v("-module, waarvan we de implementatie later bespreken.\nDeze dependencies zijn bedoeld om gebruikt te worden in de code gegenereerd door de sjablonen, niet in de ingediende\noplossing (hoewel dat momenteel technisch mogelijk is).")]),e._v(" "),n("li",[n("code",[e._v("general.selector")]),e._v(":\nDit geeft aan of de programmeertaal gebruikmaakt van een selector tijdens het uitvoeren van code die gecompileerd is\nin batchcompilatie.\nVoor de meeste talen met compilatie zal dit "),n("code",[e._v("true")]),e._v(" zijn.\nZo ook bij C.")]),e._v(" "),n("li",[n("code",[e._v("extensions.file")]),e._v(":\nGeeft de voornaamste bestandsextensie aan van de bestanden.\nMet voornaamste bedoelen we de extensie van de bestanden die gegenereerd worden.\nBijvoorbeeld in C bestaan zowel "),n("code",[e._v(".h")]),e._v(" en "),n("code",[e._v(".c")]),e._v(", maar de gegenereerde code gebruikt "),n("code",[e._v(".c")]),e._v(".")]),e._v(" "),n("li",[n("code",[e._v("extensions.templates")]),e._v(":\n- wordt gebruikt om aan te geven welke extensies gebruikt worden voor de sjablonen.\nStandaard is dit de bestandsextensie van hierboven en "),n("code",[e._v(".mako")]),e._v(".\nHet is vaak niet nodig om dit op te geven.")])]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"general"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"dependencies"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"values.h"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"values.c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"evaluation_result.h"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"evaluation_result.c"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"selector"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"extensions"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"file"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"templates"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"mako"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])])]),n("h4",{attrs:{id:"codestijl"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#codestijl"}},[e._v("#")]),e._v(" Codestijl")]),e._v(" "),n("p",[e._v("Programmeertaalelementen zoals functies en namespaces worden omgezet in functie van de codestijl die gebruikelijk is in\nde programmeertaal:")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"naming_conventions"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"namespace"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"snake_case"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"function"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"snake_case"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])])]),n("p",[e._v("De mogelijke waarden zijn:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("snake_case")]),e._v(":\nTussen elk woord staat een underscore: "),n("code",[e._v("dit_is_een_voorbeeld")]),e._v(".")]),e._v(" "),n("li",[n("code",[e._v("camel_case")]),e._v(":\nElk woord, buiten het eerste, start met een hoofdletter: "),n("code",[e._v("ditIsEenVoorbeeld")]),e._v(".\nDeze variant wordt ook wel "),n("em",[e._v("lowerCamelCase")]),e._v(" genoemd.")]),e._v(" "),n("li",[n("code",[e._v("pascal_case")]),e._v(":\nElk woord, ook het eerste, start met een hoofdletter: "),n("code",[e._v("DitIsEenVoorbeeld")]),e._v(".\nDeze variant wordt ook wel "),n("em",[e._v("UpperCamelCase")]),e._v(" genoemd.")])]),e._v(" "),n("p",[e._v("Standaard wordt "),n("code",[e._v("snake_case")]),e._v(" gebruikt, dus bij C is het niet strikt nodig om deze optie in de configuratie op te nemen.")]),e._v(" "),n("h4",{attrs:{id:"functionaliteit"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#functionaliteit"}},[e._v("#")]),e._v(" Functionaliteit")]),e._v(" "),n("p",[e._v("De laatste twee blokken in de configuratie geven aan welke constructies en gegevenstypes de programmeertaal ondersteunt.\nWe hebben reeds besproken welke functionaliteit we willen ondersteunen en welke niet.\nWe beginnen met de taalconstructies vast te leggen:")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"constructs"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"objects"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"exceptions"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"function_calls"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"assignments"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"heterogeneous_collections"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"heterogeneous_arguments"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"evaluation"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"named_arguments"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"default_parameters"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])])]),n("p",[e._v("Hier kan voor elke taalconstructie opgegeven worden of ze ondersteund wordt of niet (met een "),n("code",[e._v("boolean")]),e._v(").\nStandaard wordt geen enkele taalconstructie ondersteund.\nDit zorgt ervoor dat alle ondersteunde constructies expliciet in het configuratiebestand staan en dat nieuwe\ntaalconstructies toegevoegd kunnen worden zonder dat bestaande configuraties van programmeertalen aangepast moeten\nworden.")]),e._v(" "),n("p",[e._v("De mogelijke taalconstructies zijn deze uit de enum "),n("code",[e._v("tested.features.Construct")]),e._v(".\nHieronder volgt een lijst van elke taalconstructie en een korte beschrijving:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("objects")]),e._v(":\nObjectgeoriënteerde zaken zoals klassen.")]),e._v(" "),n("li",[n("code",[e._v("exceptions")]),e._v(":\nExceptions en uitzonderingen.")]),e._v(" "),n("li",[n("code",[e._v("function_calls")]),e._v(":\nFunctieoproepen.\nMerk op dat constructors in het testplan een speciale soort functie zijn,\nmaar deze hangen af van de taalconstructie "),n("code",[e._v("objects")]),e._v(".")]),e._v(" "),n("li",[n("code",[e._v("assignments")]),e._v(':\nHet toekennen van een waarde aan een variabele.\nEen "assignment" moet ruim geïnterpreteerd worden als ondersteuning voor iets dat neerkomt op een assigment.\nZo kent Haskell bijvoorbeeld geen assignments: '),n("code",[e._v("x = 5")]),e._v(" definieert technisch gezien een functie met een constante\nreturnwaarde "),n("code",[e._v("5")]),e._v(".\nDit moet ook onder "),n("code",[e._v("assignments")]),e._v(" gerekend worden.")]),e._v(" "),n("li",[n("code",[e._v("heterogeneous_collections")]),e._v(":\nHiermee bedoelen we collecties met elementen met verschillende gegevenstypes.\nDit is bijvoorbeeld geen probleem in Python ("),n("code",[e._v("[5, 52.23]")]),e._v("),\ngaat al iets moeilijker in Java ("),n("code",[e._v("List<Object> = List.of(1, 52.23)")]),e._v("), maar zal niet lukken in Haskell.")]),e._v(" "),n("li",[n("code",[e._v("heterogeneous_arguments")]),e._v(":\nHiermee bedoelen we functieoproepen waarbij dezelfde functie meerdere keren wordt opgeroepen met argumenten met\nverschillende datatypes (bijvoorbeeld eerst "),n("code",[e._v("check(True)")]),e._v(" daarna "),n("code",[e._v("check('hallo')")]),e._v(").\nDit zal lukken in Python en Java, maar niet in Haskell en C.")]),e._v(" "),n("li",[n("code",[e._v("evaluation")]),e._v(":\nOf een geprogrammeerde evaluatie mogelijk is in deze programmeertaal.\nDit is technisch gezien geen taalconstructie, maar dezelfde infrastructuur wordt gebruikt om dit te controleren.")]),e._v(" "),n("li",[n("code",[e._v("named_arguments")]),e._v(":\nOf benoemde argumenten ondersteund worden.\nDit betekent dat de argumenten voor een functie niet enkel positioneel, maar ook op naam meegegeven kunnen worden.")]),e._v(" "),n("li",[n("code",[e._v("default_parameters")]),e._v(":\nOf de programmeertaal standaardwaarden voor parameters ondersteunt, wat betekent dat ze kunnen weggelaten worden.")])]),e._v(" "),n("p",[e._v("Dan moeten we nu de ondersteuning voor de gegevenstypes vastleggen:")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"datatypes"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"integer"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"rational"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"char"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"text"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"boolean"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"sequence"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"unsupported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"set"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"unsupported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"map"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"unsupported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"nothing"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"int8"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"uint8"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"int16"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"uint16"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"int32"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"uint32"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"int64"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"uint64"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"bigint"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"reduced"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"single_precision"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"double_precision"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"double_extended"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"supported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"fixed_precision"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"unsupported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"array"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"unsupported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"list"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"unsupported"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"tuple"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"unsupported"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])])]),n("p",[e._v("Er zijn twee soorten gegevenstypes in TESTed: de basistypes en de geavanceerde types.\nDe basistypes zijn abstracte types voor concepten (zoals een sequentie of een geheel getal),\nterwijl de geavanceerde types concreter zijn (zoals een geheel getal van 8 bits).\nEen gegevenstype kan drie niveaus van ondersteuning hebben:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("supported")]),e._v(":\nvolledige ondersteuning")]),e._v(" "),n("li",[n("code",[e._v("reduced")]),e._v(":\nwordt ondersteund, maar wordt herleid tot een basistype\n(bijvoorbeeld een "),n("code",[e._v("list")]),e._v(" wordt geïnterpreteerd als een "),n("code",[e._v("sequence")]),e._v(")")]),e._v(" "),n("li",[n("code",[e._v("unsupported")]),e._v(":\ngeen ondersteuning, dit is de standaardwaarde")])]),e._v(" "),n("p",[e._v("Een opmerking hierbij is dat de status "),n("code",[e._v("reduced")]),e._v(" voor de basistypes equivalent is aan "),n("code",[e._v("supported")]),e._v(": een basistype\nreduceren tot een basistype blijft hetzelfde type.")]),e._v(" "),n("p",[e._v("Het is de bedoeling dat de meeste programmeertalen voor het merendeel van de datatypes ten minste "),n("code",[e._v("reduced")]),e._v(" hebben.\nToch is gekozen om "),n("code",[e._v("unsupported")]),e._v(" als standaardwaarde te nemen;\ndit zorgt ervoor dat de ondersteunde datatypes expliciet uitgeschreven zijn.\nDit laat ook toe om datatypes toe te voegen aan zonder bestaande configuraties van programmeertalen te moeten aanpassen.\nTer illustratie vermelden we hier voor C alle datatypes, ook de niet-ondersteunde.")]),e._v(" "),n("h4",{attrs:{id:"restricties-verzamelingselementen-en-map-sleutels"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#restricties-verzamelingselementen-en-map-sleutels"}},[e._v("#")]),e._v(" Restricties verzamelingselementen en map-sleutels")]),e._v(" "),n("p",[e._v("Sommige talen leggen restricties op met betrekking tot de datatypes voor verzamelingselementen en map-sleutels.\nHiervoor moeten er twee lijsten worden opgegeven worden: "),n("code",[e._v("restrictions.map_key")]),e._v(" en "),n("code",[e._v("restrictions.set")]),e._v(".\nDe inhoud van de lijsten zijn de "),n("code",[e._v("supported")]),e._v(" datatypes van TESTed die gebruikt kunnen worden, daarnaast kun je opgeven\nof functieoproepen ("),n("code",[e._v("function_calls")]),e._v(") en variabelen ("),n("code",[e._v("identifiers")]),e._v(") gebruikt kunnen worden.\nDe "),n("code",[e._v("reduced")]),e._v(" geavanceerde datatypes zullen afgeleid worden, als de basisdatatypes ondersteund worden.")]),e._v(" "),n("p",[e._v("C ondersteunt geen collecties, dus zijn beide lijsten leeg.")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"restrictions"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"map_key"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"set"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h3",{attrs:{id:"typeconfiguratiebestand"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#typeconfiguratiebestand"}},[e._v("#")]),e._v(" Typeconfiguratiebestand")]),e._v(" "),n("p",[e._v("Het typeconfiguratiebestand is een JSON-bestand met de benamingen van datatypes en gebruikte conventies voor het\nvisualiseren van een consoleprompt.\nDit configuratiebestand wordt gebruikt om opgavesjablonen\n(zie "),n("a",{attrs:{href:"../template-description"}},[e._v("Documentatie opgavesjablonen")]),e._v(")\nte instantiëren voor de programmeertaal.\nMaak eerst het configuratiebestand aan: "),n("code",[e._v("tested/languages/c/types.json")]),e._v(".")]),e._v(" "),n("h4",{attrs:{id:"informatie-voor-de-consoleprompt"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#informatie-voor-de-consoleprompt"}},[e._v("#")]),e._v(" Informatie voor de consoleprompt")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("console.name")]),e._v(":\nDe gebruikte naam van de programmeertaal in de consoleprompt.\nBijvoorbeeld: "),n("code",[e._v("python")]),e._v(" voor Python en "),n("code",[e._v("c")]),e._v(" voor C.")]),e._v(" "),n("li",[n("code",[e._v("console.prompt")]),e._v(":\nHet promptsymbool voor de programmeertaal.\nBijvoorbeeld: "),n("code",[e._v(">>>")]),e._v(" voor Python en "),n("code",[e._v(">")]),e._v(" voor C.")])]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"console"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"prompt"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('">"')]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])])]),n("h4",{attrs:{id:"haakjes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#haakjes"}},[e._v("#")]),e._v(" Haakjes")]),e._v(" "),n("p",[e._v("De gebruikte haakjes voor collectiedatatypes.\nBijvoorbeeld: "),n("code",[e._v("[]")]),e._v(" voor de Python-collecties, "),n("code",[e._v("<>")]),e._v(" voor de generieke Java-objecten (behalve arrays, die "),n("code",[e._v("[]")]),e._v(" gebruiken).\nC in TESTed ondersteunt geen collecties, dus zullen we Java en Haskell als voorbeeld nemen.")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("brackets.open")]),e._v(": Generiek openingshaakje")]),e._v(" "),n("li",[n("code",[e._v("brackets.clase")]),e._v(": Generiek sluitingshaakje")])]),e._v(" "),n("blockquote",[n("p",[e._v("Voorbeeld Java lijst: "),n("code",[e._v("List<?>")])])]),e._v(" "),n("ul",[n("li",[n("code",[e._v("brackets.<collection>.open")]),e._v(": Specifiek openingshaakje voor de gegeven collectie")]),e._v(" "),n("li",[n("code",[e._v("brackets.<collection>.close")]),e._v(": Specifiek sluitingshaakje voor de gegeven collectie")])]),e._v(" "),n("blockquote",[n("p",[e._v("Voorbeeld Java integer array: "),n("code",[e._v("int[]")])]),e._v(" "),n("p",[e._v("Voorbeeld Haskell integer lijst: "),n("code",[e._v("[Int]")])])]),e._v(" "),n("h4",{attrs:{id:"datatypes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#datatypes"}},[e._v("#")]),e._v(" Datatypes")]),e._v(" "),n("p",[e._v("Naast de console-informatie en haakjes moeten ook de benaming van de ondersteunde datatypes worden opgegeven.")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"integer"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"int"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"rational"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"double"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"char"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"char"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"text"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"char*"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"boolean"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"bool"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"nothing"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"void"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"int8"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"signed char"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"uint8"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"unsigned char"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"int16"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"short"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"uint16"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"unsigned short"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"int32"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"int"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"uint32"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"unsigned int"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"int64"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"long"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"uint64"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"unsigned long"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"bigint"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"long long"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"single_precision"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"float"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"double_precision"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"double"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"any"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"void*"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"inner"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])])]),n("p",[e._v("Ondersteunde waarden:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("string")]),e._v(": Naam van het TESTed-datatype in de programmeertaal.")]),e._v(" "),n("li",[n("strong",[e._v("boolean")]),e._v(": Alleen voor collectiedatatypes waarbij de notatie van het collectietype uitsluitend met haakjes gebeurt.\n"),n("ul",[n("li",[n("code",[e._v("true")]),e._v(": Het datatype van de gegevens in de collectie bevindt zich tussen de haakjes.\nHierbij moeten de haakjes van het collectie type expliciet worden opgeven.\nBijvoorbeeld een lijst in Haskell: "),n("code",[e._v("[Int]")])]),e._v(" "),n("li",[n("code",[e._v("false")]),e._v(": De haakjes bevinden zich achter het datatype van de gegevens in de collectie.\nHierbij moeten de haakjes van het collectie type expliciet worden opgeven.\nBijvoorbeeld de Java-array: "),n("code",[e._v("int[]")])])])])]),e._v(" "),n("p",[n("code",[e._v("inner")]),e._v(" is het object waarbij elk datatype, dat een andere naam moet krijgen in een collectie, moet opgegeven worden.\nDit geldt niet voor datatypes waarbij de haakjes achter het datatype geplaatst worden.\nBijvoorbeeld in Java: "),n("code",[e._v("Integer")]),e._v(" in plaats van "),n("code",[e._v("int")]),e._v(" voor "),n("code",[e._v("int32")]),e._v(".")]),e._v(" "),n("h4",{attrs:{id:"ondersteuning-voor-natuurlijke-talen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ondersteuning-voor-natuurlijke-talen"}},[e._v("#")]),e._v(" Ondersteuning voor natuurlijke talen")]),e._v(" "),n("p",[e._v("De benaming in de natuurlijke taal voor de collectiedatatypes en "),n("code",[e._v("text")]),e._v(", is afhankelijk van de programmeertaal.\nHiervoor wordt gevraagd om deze benaming op te geven in zowel het Engels als het Nederlands.\nDe vereiste velden zijn alle collectiedatatypes die ondersteund worden in TESTed door de programmeertaal,\nalsook de benaming voor tekst.")]),e._v(" "),n("p",[e._v("Bijvoorbeeld: in JavaScript spreekt men over "),n("em",[e._v("array")]),e._v(" voor een "),n("code",[e._v("sequence")]),e._v(",\nterwijl in Python men spreekt over een "),n("em",[e._v("lijst")]),e._v(".")]),e._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"natural"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"en"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"text"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"string"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"nl"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"text"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"string"')]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h3",{attrs:{id:"configuratieklasse"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuratieklasse"}},[e._v("#")]),e._v(" Configuratieklasse")]),e._v(" "),n("p",[e._v("De configuratieklasse is de schakel tussen de generieke aspecten van TESTed en het programmeertaalafhankelijke gedrag.\nOmdat TESTed in Python geschreven is, moet deze klasse ook in Python geïmplementeerd worden.")]),e._v(" "),n("p",[e._v("Maak een nieuw Python-bestand "),n("code",[e._v("tested/languages/c/config.py")]),e._v(" aan.\nHierin moet een klasse komen die van "),n("code",[e._v("Language")]),e._v(" overerft:")]),e._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("C")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Language"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n")])])]),n("p",[e._v("In de rest van deze paragraaf overlopen we de verschillende methodes die geïmplementeerd moeten worden in deze klasse.\nIn de superklasse, "),n("code",[e._v("Language")]),e._v(", zijn de abstracte methodes voorzien van uitgebreide documentatie.")]),e._v(" "),n("h4",{attrs:{id:"compileren-van-de-code"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#compileren-van-de-code"}},[e._v("#")]),e._v(" Compileren van de code")]),e._v(" "),n("p",[e._v("Een eerste en belangrijke methode is de callback voor de compilatiestap:")]),e._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("def")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("compilation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" files"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" List"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" CallbackResult"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    main_file "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" files"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    exec_file "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" Path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("main_file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("stem\n    result "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" executable_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("exec_file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"gcc"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-std=c11"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-Wall"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"evaluation_result.c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"values.c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n             main_file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-o"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),n("p",[e._v("De eerste parameter van deze methode is een klasse met enkele configuratie-opties, zoals de tijdslimiet, geheugenlimiet\nen de programmeertaalspecifieke opties.\nDit zou bijvoorbeeld gebruikt kunnen worden om de versie van C mee te geven (zoals C11 of C99).\nDit wordt momenteel niet gedaan in C, want TESTed vereist C11, maar de mogelijkheid bestaat.\nWel moeten we opmerken dat de tijdslimiet zelden nuttig zal zijn, daar TESTed de uitvoeringstijd bijhoudt.\nIn de configuratieklasse is het dus niet nodig om daar rekening mee te houden.")]),e._v(" "),n("p",[e._v("De andere parameter van deze methode is een lijst van bestanden waarvan TESTed vermoedt dat ze nuttig kunnen zijn voor\nde compilatiestap.\nHet bevat onder andere de dependencies uit het configuratiebestand,\nde ingediende oplossing en de uit de sjablonen gegenereerde bestanden.\nDie laatste bestanden zijn bijvoorbeeld de verschillende contexten bij een batchcompilatie,\nmaar kunnen ook de evaluator zijn bij een geprogrammeerde evaluatie.\nDe bestanden bestaan uit de naam en een bestandsextensie.")]),e._v(" "),n("p",[e._v("De conventie is om het bestand met de main-functie als laatste te plaatsen.")]),e._v(" "),n("p",[e._v("Al deze bestanden zullen zich in de map bevinden waarin de compilatie plaatsvindt.\nHet is niet verplicht om al deze bestanden ook effectief te gebruiken:\nsommige programmeertalen hebben zelf een detectiesysteem voor bestanden.\nZo is het in C voldoende om enkel het laatste bestand met de main-functie te gebruiken:\nalle andere bestanden worden gevonden door GCC.")]),e._v(" "),n("p",[e._v("Concreet ziet een argument voor deze parameter er bijvoorbeeld als volgt uit:")]),e._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'values.py'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'evaluation_utils.py'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'context_0_0.py'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),n("p",[e._v("Als returnwaarde moet deze methode een tuple met twee element teruggeven:\nhet compilatiecommando en een lijst van resulterende bestanden of een filter.")]),e._v(" "),n("p",[e._v("Het compilatiecommando neemt de vorm aan van een lijst van de elementen waaruit het commando bestaat.\nBij het uitvoeren van dit commando zal deze lijst aan de Python-module "),n("code",[e._v("subprocess")]),e._v(" gegeven worden.")]),e._v(" "),n("p",[e._v("Na het uitvoeren van het compilatiecommando moet TESTed weten welke bestanden relevant zijn om mee te nemen naar een\nvolgende stap in de beoordeling.\nDaarom moet een lijst van resulterende bestanden teruggegeven worden.\nEnkel bestanden in deze lijst zullen bijvoorbeeld beschikbaar zijn bij het uitvoeren van de runs.\nEen lijst van bestanden teruggeven is mogelijk indien op voorhand geweten is in welke bestanden de compilatie\nresulteert.\nDit is bijvoorbeeld hier het geval (in C resulteert de compilatie in één uitvoerbaar bestand), of ook bij Python,\nwaar de compilatie voor elk "),n("code",[e._v(".py")]),e._v("-bestand resulteert in een "),n("code",[e._v(".pyc")]),e._v("-bestand.\nOok hier moet de conventie gerespecteerd worden dat het bestand met de "),n("code",[e._v("main")]),e._v("-functie als laatste komt.")]),e._v(" "),n("p",[e._v("Het is echter niet altijd mogelijk om op voorhand te weten in welke bestanden de code zal resulteren.\nZo resulteert compilatie van één "),n("code",[e._v(".java")]),e._v("-bestand mogelijk in meerdere "),n("code",[e._v(".class")]),e._v("-bestanden,\nafhankelijk van de inhoud van de bestanden.\nOm dit op te lossen kan in plaats van een lijst ook een filterfunctie teruggegeven worden.")]),e._v(" "),n("p",[e._v("Nadat de compilatie uitgevoerd is,\nzal TESTed deze filter toepassen op elk bestand in de map waarin de compilatie uitgevoerd is.\nDe filterfunctie krijgt als argument de naam van een bestand en moet "),n("code",[e._v("True")]),e._v(" of "),n("code",[e._v("False")]),e._v(" teruggeven als het bestand\nrespectievelijk wel of niet moet meegenomen worden naar een volgende stap.")]),e._v(" "),n("p",[e._v("Een voorbeeld van de in- en uitvoer van de compilatiemethode:")]),e._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" compilation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'submission.c'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'evaluation_result.c'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'context_0_0.c'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'selector.c'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'gcc'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'-std=c11'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'-Wall'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'evaluation_result.c'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'values.c'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'selector.c'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n     "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'-o'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'selector.exe'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'selector.exe'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),n("p",[e._v("Als een leeg compilatiecommando wordt teruggegeven, dan wordt er geen compilatie gedaan.\nDit is ook de standaardimplementatie van deze methode.\nVoor programmeertalen waar geen compilatie nodig is, moet deze methode niet geïmplementeerd worden.")]),e._v(" "),n("h4",{attrs:{id:"uitvoeren-van-de-testcode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#uitvoeren-van-de-testcode"}},[e._v("#")]),e._v(" Uitvoeren van de testcode")]),e._v(" "),n("p",[e._v("Na het compileren moeten we een methode implementeren om de gecompileerde code uit te voeren:")]),e._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("def")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("execution")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n              cwd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("file")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" List"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" Command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    local_file "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" cwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v(" executable_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("file")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("stem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("local_file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("absolute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),n("p",[e._v("Deze functie heeft vier parameters:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("config")]),e._v(":\nDezelfde configuratie-opties als bij de compilatiemethode.\nBij Java wordt dit bijvoorbeeld gebruikt om de geheugenlimiet van de JVM juist in te stellen.")]),e._v(" "),n("li",[n("code",[e._v("cwd")]),e._v(":\nde map waarin het uitvoeren plaatsvindt")]),e._v(" "),n("li",[n("code",[e._v("file")]),e._v(":\nhet uitvoerbaar bestand dat moet uitgevoerd worden")]),e._v(" "),n("li",[n("code",[e._v("arguments")]),e._v(":\nargumenten die aan het proces moeten meegegeven worden")])]),e._v(" "),n("p",[e._v("Als resultaat moet het commando teruggegeven worden, dat ook aan "),n("code",[e._v("subprocess")]),e._v(" doorgegeven wordt.")]),e._v(" "),n("p",[e._v("In het geval van C is dit commando eenvoudig:\nwe geven het absolute pad naar het uitvoerbare bestand mee en geven ook de argumenten mee.\nHet absolute pad is nodig omdat de executable die we willen uitvoeren\n(en gemaakt hebben in de compilatiestap) niet in het "),n("code",[e._v("PATH")]),e._v(" zit.")]),e._v(" "),n("p",[e._v("Een voorbeeld van deze functie in werking is:")]),e._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" execution"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/test/path'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'executable.exe'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'arg1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'arg2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/test/path/executable.exe'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'arg1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'arg2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),n("p",[e._v("De basisimplementatie van de configuratie is nu klaar.\nVoor de meeste programmeertalen kan nu overgegaan worden naar de sjablonen,\nmaar in C moeten we nog een extra methode implementeren.")]),e._v(" "),n("h4",{attrs:{id:"aanpassen-van-de-ingediende-oplossing"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#aanpassen-van-de-ingediende-oplossing"}},[e._v("#")]),e._v(" Aanpassen van de ingediende oplossing")]),e._v(" "),n("p",[e._v("De testcode die door TESTed gegenereerd wordt, kan meerdere "),n("code",[e._v("main")]),e._v("-functies bevatten:")]),e._v(" "),n("ul",[n("li",[e._v("De ingediende oplossing kan een "),n("code",[e._v("main")]),e._v("-functie hebben.")]),e._v(" "),n("li",[e._v("Zowel de contexten als de selector kunnen "),n("code",[e._v("main")]),e._v("-functies hebben.")])]),e._v(" "),n("p",[e._v("In C kan er slechts één "),n("code",[e._v("main")]),e._v("-functie per compilatie zijn.")]),e._v(" "),n("p",[e._v("Een ander probleem is dat de selector elke run insluit (zoals we later zullen zien bij de sjablonen),\nen elke run ook de oplossing insluit.")]),e._v(" "),n("p",[e._v("Om deze redenen moeten we de code van de ingediende oplossing een beetje aanpassen:")]),e._v(" "),n("ul",[n("li",[e._v("We voegen een "),n("code",[e._v("guard")]),e._v(" toe, zodat de oplossing slechts eenmaal geladen wordt.")]),e._v(" "),n("li",[e._v("We hernoemen de "),n("code",[e._v("main")]),e._v("-functie naar "),n("code",[e._v("solution_main")]),e._v(" indien die bestaat.\nAls de "),n("code",[e._v("main")]),e._v("-functie geen argumenten had dan voegen we die ook toe.")])]),e._v(" "),n("p",[e._v("Vertaald naar de configuratieklasse wordt dit:")]),e._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("def")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("solution")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" solution"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" bundle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Bundle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("with")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("solution"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"r"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("as")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("file")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        contents "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("file")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("read"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# We use regex to find the main function.")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# First, check if we have a no-arg main function.")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# If so, replace it with a renamed main function that does have args.")]),e._v("\n    no_args "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" re"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("compile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('r"(int|void)(\\s+)main(\\s*)\\((\\s*)\\)(\\s*{)"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    replacement "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('r"int\\2solution_main\\3(\\4int argc, char** argv)\\5"')]),e._v("\n    contents"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" nr "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" re"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("subn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("no_args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" replacement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" contents"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" count"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" nr "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# There was no main function without arguments. Now we try a main")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# function with arguments.")]),e._v("\n        with_args "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" re"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("compile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('r"(int|void)(\\s+)main(\\s*)\\((\\s*)int"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n        replacement "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('r"int\\2solution_main\\3(\\4int"')]),e._v("\n        contents "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" re"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("sub"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("with_args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" replacement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" contents"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" count"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("with")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("solution"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"w"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("as")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("file")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        header "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"#pragma once\\n\\n"')]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("file")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("write"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("header "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" contents"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),n("h3",{attrs:{id:"sjablonen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sjablonen"}},[e._v("#")]),e._v(" Sjablonen")]),e._v(" "),n("p",[e._v("De derde stap bestaat uit het schrijven van de sjablonen.\nWe hebben uiteraard de verplichte sjablonen nodig,\nmaar om code te hergebruiken kiezen we ervoor om enkele bijkomende sjablonen te schrijven:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("run.c")]),e._v(": het sjabloon voor run ("),n("strong",[e._v("verplicht")]),e._v(")")]),e._v(" "),n("li",[n("code",[e._v("selector.c")]),e._v(": het sjabloon voor de selector voor batchcompilatie ("),n("strong",[e._v("verplicht")]),e._v(" bij batchcompilatie)")]),e._v(" "),n("li",[n("code",[e._v("declaration.mako")]),e._v(": vertaalt de declaratie van een variabele naar code")]),e._v(" "),n("li",[n("code",[e._v("function.mako")]),e._v(": vertaalt een functieoproep naar code")]),e._v(" "),n("li",[n("code",[e._v("statement.mako")]),e._v(": vertaalt een statement of een expressie naar code ("),n("strong",[e._v("verplicht")]),e._v(")")]),e._v(" "),n("li",[n("code",[e._v("value.mako")]),e._v(": vertaalt een letterlijke waarde naar code")]),e._v(" "),n("li",[n("code",[e._v("value_arguments.mako")]),e._v(":\nhulpsjabloon voor "),n("code",[e._v("value.mako")]),e._v(" (opsomming van recursieve gegevenstypes, zoals lijsten, maar ook van functieargumenten)")]),e._v(" "),n("li",[n("code",[e._v("value_basic.mako")]),e._v(": hulpsjabloon voor "),n("code",[e._v("value.mako")]),e._v(" (vertaalt de basistypes)")])]),e._v(" "),n("p",[e._v("Al deze sjablonen komen in de map "),n("code",[e._v("tested/languages/c/templates")]),e._v(".")]),e._v(" "),n("p",[e._v("Het is vrij om de bestandsextensie van de sjablonen te kiezen, zolang het een extensie is uit de configuratie.\nStandaard zijn de toegelaten extensies "),n("code",[e._v(".mako")]),e._v(" en een programmeertaalafhankelijke extensie, hier "),n("code",[e._v(".c")]),e._v(".\nEen conventie die gebruikt wordt binnen TESTed, is de volgende:")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("Sjablonen eindigen op de programmeertaalafhankelijke extensie ("),n("code",[e._v(".c")]),e._v(")\nindien het sjabloon resulteert in een op zichzelf staand bestand.\nVoorbeelden zijn het runsjabloon en de selector.")])]),e._v(" "),n("li",[n("p",[e._v("Sjablonen die resulteren in een codefragment en dus vooral gebruikt worden als onderdeel van andere sjablonen eindigen\nop "),n("code",[e._v(".mako")]),e._v(".\nDit zijn bijvoorbeeld de sjablonen om functies en statements om te zetten.")])])]),e._v(" "),n("p",[e._v("Dit wordt niet afgedwongen door TESTed; alle sjablonen hadden de extensie "),n("code",[e._v(".c")]),e._v(" of "),n("code",[e._v(".mako")]),e._v(" kunnen krijgen,\nof een mengeling.\nDit geldt voornamelijk voor de verplichte sjablonen.\nDe andere sjablonen (die als hulpmiddel gebruikt worden door de verplichte sjablonen) kunnen eender welke\nextensie krijgen, want bij het gebruiken van een sjabloon in Mako moet de bestandsextensie opgegeven worden.")]),e._v(" "),n("h4",{attrs:{id:"het-runsjabloon"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#het-runsjabloon"}},[e._v("#")]),e._v(" Het runsjabloon")]),e._v(" "),n("p",[e._v("Dit is veruit het grootste en het meest ingewikkelde sjabloon.\nHet is verantwoordelijk voor het genereren van de testcode voor één run.")]),e._v(" "),n("p",[e._v("We importeren de values-module (hierover later meer) en de ingediende oplossing.\nDe variabele "),n("code",[e._v("submission_name")]),e._v(" zal de naam van het oplossingsbestand bevatten.\nEen overzicht van alle beschikbare variabelen in het runsjabloon is te vinden in de klasse\n"),n("code",[e._v("_ExecutionArguments")]),e._v(" uit de module "),n("code",[e._v("tested.languages.generator")]),e._v(".")]),e._v(" "),n("p",[e._v("We importeren ook alle programmeertaalspecifieke evaluatoren die we nodig zullen hebben.\nDe variabele "),n("code",[e._v("evaluator_names")]),e._v(" bevat een verzameling van deze namen.")]),e._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("include")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("<stdio.h>")])]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("include")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"values.h"')])]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("include")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${submission_name}.c"')])]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" name in evaluator_names"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("include")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${name}.c"')])]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" endfor\n")])])]),n("h5",{attrs:{id:"witruimte-in-mako"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#witruimte-in-mako"}},[e._v("#")]),e._v(" Witruimte in Mako")]),e._v(" "),n("p",[e._v("Nuttig om weten is dat TESTed een extensie heeft toegevoegd aan Mako,\nwaardoor de inspringing van Mako-gerelateerde taalconstructies zal verdwijnen\n(de inspringing van de "),n("code",[e._v("for")]),e._v(" wordt dus verwijderd).\nDe "),n("code",[e._v("for")]),e._v("-loop in het fragment hierboven resulteert bijvoorbeeld in deze code:")]),e._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("include")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"context_0_0.c"')])]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("include")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"context_0_1.c"')])]),e._v("\n")])])]),n("h5",{attrs:{id:"regeleindes-in-mako"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#regeleindes-in-mako"}},[e._v("#")]),e._v(" Regeleindes in Mako")]),e._v(" "),n("p",[e._v("Ook nuttig om weten is dat een regeleinde in een sjabloon in Mako resulteert in een regeleinde in het\ngeproduceerde bestand.\nMako voorziet hier een oplossing voor:\ndoor een "),n("em",[e._v("backslash")]),e._v(" op het einde van de regel te plaatsen zal er geen regeleinde komen in het geproduceerde bestand.\nVolgende codefragment (let op de "),n("code",[e._v("\\")]),e._v("):")]),e._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),e._v(" test "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" \\⏎\n"),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("⏎\n")])])]),n("p",[e._v("Zal bijvoorbeeld resulteren in deze code:")]),e._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),e._v(" test "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("⏎\n")])])]),n("p",[e._v("Vervolgens maken we twee variabelen aan waarin de bestanden komen die dienst doen als return- en exception-channel.\nWe noemen deze bestanden de uitvoerbestanden.\nMerk op dat C geen exceptions ondersteunt, maar TESTed verwacht toch een bestand voor het exception-channel.\nAnders zal TESTed ervan uitgaan dat er iets verkeerd liep tijdens het uitvoeren.\nWe definiëren direct ook een functie om de separator naar alle uitvoerkanalen te schrijven.")]),e._v(" "),n("p",[e._v("In onderstaand codefragment en in de rest van het runsjabloon wordt regelmatig de naam van de context als prefix\ngebruikt voor functies en variabelen.\nDit is omdat het in C niet mogelijk is om in meerdere bestanden functies met dezelfde naam te hebben.\nAls we dus meerdere runs samen compileren en elke run heeft zijn eigen "),n("code",[e._v("write_separator")]),e._v("-functies,\ndan zou het compileren mislukken.")]),e._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" FILE"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("_value_file "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[e._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" FILE"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("_exception_file "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[e._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("void")]),e._v(" $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("_write_separator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("fprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("_value_file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"--${secret_id}-- SEP"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("fprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("_exception_file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"--${secret_id}-- SEP"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("fprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"--${secret_id}-- SEP"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("fprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[e._v("stderr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"--${secret_id}-- SEP"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("void")]),e._v(" $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("_write_context_separator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("fprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("_value_file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"--${context_secret_id}-- SEP"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("fprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("_exception_file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"--${context_secret_id}-- SEP"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("fprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[e._v("stdout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"--${context_secret_id}-- SEP"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("fprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[e._v("stderr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"--${context_secret_id}-- SEP"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("p",[e._v("Als een resultaat geproduceerd wordt voor de return- of exception-channel,\ndan moet dat resultaat geserialiseerd worden en naar de uitvoerbestanden geschreven worden.\nTESTed verwacht dat volgende functies beschikbaar zijn:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("send_value(value)")]),e._v(" schrijf een waarde naar een bestand.")]),e._v(" "),n("li",[n("code",[e._v("send_exception(exception)")]),e._v(" schrijf een exception naar een bestand.")]),e._v(" "),n("li",[n("code",[e._v("send_specific_value(value)")]),e._v(" schrijf het resultaat van een programmeertaalspecifieke evaluatie naar de return-channel.")]),e._v(" "),n("li",[n("code",[e._v("send_specific_exception(exception)")]),e._v(" schrijf het resultaat van een programmeertaalspecifieke evaluatie naar de\nexception-channel.")])]),e._v(" "),n("p",[e._v("Bij het implementeren moeten de conventies voor naamgeving van de programmeertaal toegepast worden\nzo zal TESTed in Java een oproep naar een functie met naam "),n("code",[e._v("sendValue")]),e._v(" genereren.")]),e._v(" "),n("p",[e._v("We zullen later zien dat we zelf de oproepen naar deze functies in het sjabloon schrijven.\nToegepast op C zijn er wat wijzigingen, omdat C geen exceptions ondersteunt.\nAls gevolg daarvan zullen we de exception-functies niet implementeren en zullen we ook geen oproep naar deze functies\ngenereren.\nIn C gebruiken we ook een macro in plaats van een functie: dit opnieuw omdat we niet dezelfde functie in meerdere\nbestanden kunnen definiëren.")]),e._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("undef")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[e._v("send_value")])]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token macro-name function"}},[e._v("send_value")]),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("write_value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("_value_file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")])])]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("undef")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[e._v("send_specific_value")])]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token macro-name function"}},[e._v("send_specific_value")]),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("write_evaluated")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("_value_file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")])])]),e._v("\n")])])]),n("p",[e._v("We zien ook dat de implementatie eenvoudig is: we geven de gekregen waarde of exception door aan de juiste functie uit\nde "),n("code",[e._v("values")]),e._v("-module en geven ook het bestand mee waarin de waarde of exception moet komen.")]),e._v(" "),n("p",[e._v("Waarom is het nodig is om deze functies te gebruiken?\nAls TESTed een functieoproep naar deze functies kan definiëren,\nwaarom kan TESTed dan niet direct de "),n("code",[e._v("values")]),e._v("-module gebruiken, zonder daar deze functies tussen te plaatsen?")]),e._v(" "),n("p",[e._v("Het antwoord is dat de "),n("code",[e._v("values")]),e._v("-module niet verplicht is.\nDit is een conventie die in alle ondersteunde programmeertalen gebruikt wordt,\nmaar het is evengoed mogelijk om bij de implementatie van bijvoorbeeld "),n("code",[e._v("send_value")]),e._v(' de waarde rechtstreeks naar het\nbestand te schrijven.\nDeze functies moeten beschouwd worden als de "interface" tussen TESTed en de programmeertaal:\nTESTed verwacht dat deze functies bestaan en de waarde of exception naar het juiste bestand schrijven,\nmaar hoe dat gebeurt maakt voor TESTed niet uit.')]),e._v(" "),n("p",[e._v("Nu zijn we aangekomen bij het uitvoeren van de contexten zelf.\nHiervoor wordt er per context een functie gegenereerd.\nDeze print eerst de "),n("code",[e._v("before")]),e._v("-code.\nDe "),n("code",[e._v("before")]),e._v("-code is een fragment code dat uitgevoerd wordt voor het uitvoeren van de context.\nDeze kan opgegeven worden in het testplan.")]),e._v(" "),n("p",[e._v("Verder schrijven we de "),n("em",[e._v("separator")]),e._v(" naar de uitvoerbestanden door gebruik te maken van de functie die we eerder\ngedefinieerd hebben in ons sjabloon.\nZoals we reeds bespraken, komt de uitvoer van de return- en exception-channel van alle testgevallen in dezelfde\nbestanden terecht.\nHet is nodig om de waarden van elkaar te kunnen onderscheiden, om goed te weten waar de resultaten van een testgeval\nstoppen en waar de resultaten van het volgende testgeval beginnen.\nHiervoor gebruiken we de "),n("em",[e._v("separator")]),e._v(".")]),e._v(" "),n("p",[e._v("Het is belangrijk om de separator altijd vóór aanvang van een testgeval naar de uitvoerbestanden te schrijven.\nTESTed is daar zo op voorzien: de separator na het testgeval uitschrijven zal tot verkeerde resultaten leiden.")]),e._v(" "),n("p",[e._v("We genereren de code voor alle normale testgevallen.\nOmdat C geen exceptions ondersteunt, is deze implementatie eenvoudig:\nwe schrijven de separator naar de uitvoerbestanden en voeren het invoerstatement uit.")]),e._v(" "),n("p",[e._v("Dat invoerstatement is "),n("code",[e._v("testcase.input_statement()")]),e._v(", wat een geserialiseerd statement zal teruggeven.\nWat dat statement juist is, is eigenlijk niet relevant voor het sjabloon, maar het kan toch geen kwaad om het te weten:")]),e._v(" "),n("ul",[n("li",[e._v("Als de invoer van het testgeval een assignment is, zal dit resulteren in code die er zo uitziet:\n"),n("code",[e._v("int variable = functieoproep();")])]),e._v(" "),n("li",[e._v("Is de invoer een uitdrukking () en zijn we geïnteresseerd in de returnwaarde (het is dus niet van het type "),n("code",[e._v("void")]),e._v("),\ndan zal de gegenereerde code er als volgt uitzien: "),n("code",[e._v("send_value(functieoproep());")])])]),e._v(" "),n("p",[e._v("Als afsluiter zetten we de "),n("code",[e._v("after")]),e._v("-code en sluiten we de bestanden. De\n"),n("code",[e._v("after")]),e._v("-code is analoog aan de "),n("code",[e._v("before")]),e._v("-code.")]),e._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" ctx in "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("enumerate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("contexts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("void")]),e._v(" $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("_context_$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("before"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" testcase in ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("testcases"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n            $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("_write_separator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v("include file"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"statement.mako"')]),e._v(" args"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"statement=testcase.input_statement()"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" endfor\n        $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("after"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" endfor\n")])])]),n("p",[e._v("Nu zijn we aangekomen bij het uitvoeren van de run zelf.\nIn C gebeurt dit in een functie die de naam van de run ("),n("code",[e._v("execution_name")]),e._v(") krijgt.\nAls eerste stap maken we de bestanden voor de return- en exception-channel aan.")]),e._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),e._v(" $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n\n    $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("_value_file "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("fopen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${value_file}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"w"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("_exception_file "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("fopen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${exception_file}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"w"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),n("p",[e._v("Verder schrijven we de "),n("em",[e._v("context_separator")]),e._v(" naar de uitvoerbestanden door gebruik te maken van de functie die we eerder\ngedefinieerd hebben in ons sjabloon.\nZoals we reeds bespraken, komt de uitvoer van de return- en exception-channel van alle contexten in dezelfde\nbestanden terecht.\nHet is nodig om de waarden van elkaar te kunnen onderscheiden, om goed te weten waar de resultaten van een context\nstoppen en waar de resultaten van het volgende context beginnen.\nHiervoor gebruiken we de "),n("em",[e._v("context_separator")]),e._v(".")]),e._v(" "),n("p",[e._v("Het is belangrijk om de separator altijd vóór aanvang van een context naar de uitvoerbestanden te schrijven.\nTESTed is daar zo op voorzien: de separator na het context uitschrijven zal tot verkeerde resultaten leiden.")]),e._v(" "),n("p",[e._v("We roepen eerst de "),n("code",[e._v("main")]),e._v("-functie van de oplossing op indien het testplan dat vereist.\nOefeningen waar geen "),n("code",[e._v("main")]),e._v("-functie opgeroepen wordt zijn bijvoorbeeld deze waarbij de student een functie moet\nimplementeren.")]),e._v(" "),n("p",[e._v("In het codefragment hieronder wordt een oproep gedaan naar de functie "),n("code",[e._v("solution_main")]),e._v(" uit de ingediende oplossing.\nDeze functie hebben we zelf gemaakt door de gewone "),n("code",[e._v("main")]),e._v("-functie te hernoemen\n(zie "),n("a",{attrs:{href:"#configuratieklasse"}},[e._v("Configuratieklasse")]),e._v(").\nAls de ingediende oplossing geen "),n("code",[e._v("main")]),e._v("-functie bevatte, maar het testplan verwachtte die wel,\ndan zal de compilatie falen.")]),e._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[e._v("    $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("_write_context_separator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" run_testcase"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("exists"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("char")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\\\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" argument in "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"solution"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" run_testcase"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("arguments"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${argument}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" \\\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" endfor\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),e._v(" exit_code "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("solution_main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("run_testcase"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("exit_code "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" exit_code"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" endif\n")])])]),n("p",[e._v("Vervolgens genereren we de code die nodig is om de verschillende context uit te voeren.")]),e._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[e._v("    "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" ctx in "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("enumerate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("contexts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n        $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("_write_context_separator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n        $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("_context_$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" endfor\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("fclose")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("_value_file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("fclose")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("_exception_file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("p",[e._v("Omdat zowel runcompilatie als batchcompilatie ondersteunt wordt, moet elke run een "),n("code",[e._v("main")]),e._v("-functie hebben.\nC laat slechts 1 "),n("code",[e._v("main")]),e._v("-functie toe.\nIndien we in batchcompilatie zitten, zal de selector gebruikt worden, en zal "),n("code",[e._v("INCLUDED")]),e._v(" op "),n("code",[e._v("TRUE")]),e._v(" staan.\nIn dat geval voegen we geen "),n("code",[e._v("main")]),e._v("-functie toe.")]),e._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("ifndef")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[e._v("INCLUDED")])]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("execution_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("endif")])]),e._v("\n")])])]),n("h4",{attrs:{id:"het-selectorsjabloon"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#het-selectorsjabloon"}},[e._v("#")]),e._v(" Het selectorsjabloon")]),e._v(" "),n("p",[e._v("Het is nuttig om er meteen het selectorsjabloon bij te halen: dit wordt gebruikt als TESTed in batchcompilatie werkt en\nis verantwoordelijk om de juiste context uit te voeren op basis van een argument.\nHet is in dit sjabloon dat de macro "),n("code",[e._v("INCLUDED")]),e._v(" op "),n("code",[e._v("true")]),e._v(" gezet wordt,\nwaardoor de "),n("code",[e._v("main")]),e._v("-functies in andere contexten niet gebruikt worden.")]),e._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("include")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("<string.h>")])]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("include")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("<stdio.h>")])]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("INCLUDED")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[e._v("true")])]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" cont in contexts"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("include")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${cont}.c"')])]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" endfor\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),e._v(" argc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("char")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("argc "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("fprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[e._v("stderr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"No run context selected."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("char")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" cont in contexts"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("strcmp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${cont}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("cont"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" endfor\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("fprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[e._v("stderr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("\"Non-existing run context '%s' selected.\"")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("h4",{attrs:{id:"het-statementsjabloon"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#het-statementsjabloon"}},[e._v("#")]),e._v(" Het statementsjabloon")]),e._v(" "),n("p",[e._v("Dit sjabloon wordt door TESTed gebruikt om statements te vertalen naar code.\nDit omvat onder andere assignments, functieoproepen en waarden:")]),e._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[e._v("## Convert a statement and"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("or expression into Java code"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" from tested"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("utils import get_args "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\\\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" from tested"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("serialisation import Value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" Identifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" FunctionCall"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" Assignment "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\\\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v("page args"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"statement,full=False"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\\\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("isinstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("statement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" Identifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n    ## If the expression is an identifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" just echo it"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n    $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("statement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\\\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" elif "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("isinstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("statement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" FunctionCall"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n    ## Delegate to the function template "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" function calls"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v("include file"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"function.mako"')]),e._v(" args"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"function=statement"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\\\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" elif "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("isinstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("statement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("get_args")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n    ## We have a value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" delegate to the value template"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v("include file"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"value.mako"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" args"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"value=statement"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\\\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" assert "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("isinstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("statement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("get_args")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Assignment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\\\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" full"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v("include file"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"declaration.mako"')]),e._v(" args"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"tp=statement.type, value=statement.expression"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" \\\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" endif\n    $"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("statement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("variable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v("include file"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"statement.mako"')]),e._v(" args"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"statement=statement.expression"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\\\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("%")]),e._v(" endif\n")])])]),n("p",[e._v("De implementatie van dit sjabloon komt conceptueel neer op een grote "),n("code",[e._v("switch")]),e._v(",\nwaarbij we delegeren naar het juiste sjabloon op basis van welk soort statement of expressie het is.")]),e._v(" "),n("p",[e._v("Een aspect dat wat meer uitleg vraagt, is de "),n("code",[e._v("full")]),e._v("-parameter.\nDit geeft aan dat het gegevenstype bij een variabele declaratie ook nodig is.\nHet verschil is duidelijk met een voorbeeld:")]),e._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),e._v(" variabele "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// met declaration")]),e._v("\nvariabele "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// zonder declaration")]),e._v("\n")])])]),n("p",[e._v("In C is deze parameter minder relevant omdat de tweede variant zelden nodig is,\nmaar deze is vooral nodig in talen zoals Java.")]),e._v(" "),n("p",[e._v("Wat ook nuttig kan zijn, is de functie "),n("code",[e._v("get_args")]),e._v(", geïmporteerd uit "),n("code",[e._v("tested.utils")]),e._v(".\nWe willen op verschillende plaatsen in het sjabloon een andere actie doen op basis van het soort statement.\nNormaliter zou een eenvoudige oproep met "),n("code",[e._v("isinstance")]),e._v(" volstaan.\nNu zijn verschillende types, zoals "),n("code",[e._v("Value")]),e._v(", "),n("code",[e._v("Expression")]),e._v(" en "),n("code",[e._v("Statement")]),e._v(" geen echt type:\nze zijn geïmplementeerd als een "),n("code",[e._v("Union")]),e._v(".\nZo luidt de definitie van "),n("code",[e._v("Expression")]),e._v(" als volgt: "),n("code",[e._v("Expression = Union[Identifier, FunctionCall, Value]")]),e._v(".\n"),n("code",[e._v("Union")]),e._v("-types kunnen niet gebruikt worden in "),n("code",[e._v("isinstance")]),e._v(".\nDe "),n("code",[e._v("get_args")]),e._v("-functie lost dit probleem op door de "),n("code",[e._v("Union")]),e._v(" om te zetten naar een "),n("code",[e._v("tuple")]),e._v(" van echte types.\nHet is beter de functie "),n("code",[e._v("get_args")]),e._v(" te veel dan te weinig te gebruiken: de functie werkt ook voor gewone types.")]),e._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("isinstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'string'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" Expression"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nTypeError\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("isinstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'string'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" get_args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("Expression"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("False")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("isinstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'string'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" get_args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Ook gewone types")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("True")]),e._v("\n")])])]),n("h4",{attrs:{id:"overige"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overige"}},[e._v("#")]),e._v(" Overige")]),e._v(" "),n("p",[e._v("De overige sjablonen vertalen elk een taalelement op een gelijkaardige wijze als het statementsjabloon.\nHet gaat om volgende sjablonen:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("declaration.mako")])]),e._v(" "),n("li",[n("code",[e._v("function.mako")])]),e._v(" "),n("li",[n("code",[e._v("value.mako")])]),e._v(" "),n("li",[n("code",[e._v("value_arguments.mako")])]),e._v(" "),n("li",[n("code",[e._v("value_basic.mako")])])]),e._v(" "),n("p",[e._v("We hebben ze niet opgenomen in deze handleiding, omdat ze sterk lijken op het statementsjabloon.\nDe implementatie van deze sjablonen is te bekijken in de repository.")]),e._v(" "),n("h3",{attrs:{id:"hulpmodules"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hulpmodules"}},[e._v("#")]),e._v(" Hulpmodules")]),e._v(" "),n("p",[e._v('Zoals we in het begin van dit hoofdstuk vermeld hebben, zijn er twee bestanden die als "dependency" opgegeven zijn:\n'),n("code",[e._v("values.c")]),e._v(" en "),n("code",[e._v("values.h")]),e._v(".\nDeze bestanden implementeren het serialiseren van data naar het serialisatieformaat en vormen samen de "),n("code",[e._v("values")]),e._v("-module.\nDe elementen die geserialiseerd moeten worden:")]),e._v(" "),n("ul",[n("li",[e._v("Waarden, zoals returnwaarden.")]),e._v(" "),n("li",[e._v("Exceptions (niet het geval in C, want die bestaan niet in C).")]),e._v(" "),n("li",[e._v("Resultaten van geprogrammeerde en programmeertaalspecifieke evaluaties.")])]),e._v(" "),n("p",[e._v("Hier nemen we de implementatie opnieuw niet op, daar de implementatie van deze module volledig\nprogrammeertaalafhankelijk is.\nIn Python is de implementatie eenvoudig door de ingebouwde module "),n("code",[e._v("json")]),e._v(",\nterwijl de implementatie in C een stuk langer is.")]),e._v(" "),n("h3",{attrs:{id:"registratie"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#registratie"}},[e._v("#")]),e._v(" Registratie")]),e._v(" "),n("p",[e._v("Als laatste rest nu nog om de nieuwe programmeertaal te registreren bij TESTed.\nHiervoor volstaat het om de programmeertaal en de bijhorende configuratieklasse toe te voegen aan het bestand\n"),n("code",[e._v("tested/languages/__init__.py")]),e._v(", in de dictionary "),n("code",[e._v("LANGUAGES")]),e._v(":")]),e._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[e._v("LANGUAGES "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'c'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'haskell'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Haskell"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'java'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'javascript'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" JavaScript"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'kotlin'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Kotlin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'python'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Python"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'runhaskell'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" RunHaskell"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),n("p",[e._v("Om de programmeertaal manueel te testen is volgend stappenplan aanbevolen:")]),e._v(" "),n("ol",[n("li",[e._v("Implementeer oplossingen voor een of meerdere oefeningen uit de map "),n("code",[e._v("exercises")]),e._v(" in de nieuwe programmeertaal.")]),e._v(" "),n("li",[e._v("Wijzig "),n("code",[e._v("tested/manual.py")]),e._v(" zodat dit bestand de oefening gebruikt waarvoor een oplossing bestaat\n(en stel ook de juiste programmeertaal in).")]),e._v(" "),n("li",[e._v("Voer uit, zoals we in het begin van het hoofdstuk besproken hebben:"),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" python -m tested.manual\n")])])])])]),e._v(" "),n("p",[e._v("TESTed heeft ook een testsuite met verschillende oefeningen en scenario's.\nOm de nieuwe programmeertaal hieraan toe te voegen, moeten de juiste oplossingen geïmplementeerd worden.\nHiervoor wordt best gekeken naar "),n("code",[e._v("tests/test_functionality.py")]),e._v(".\nIn dat bestand staan de verschillende testen.\nBij elke test staat welke oplossing gebruikt wordt; indien het niet duidelijk zou zijn wat de oplossing voor een\nbepaalde test moet doen, kunnen de bestaande oplossingen in de bestaande programmeertalen een grote hulp zijn.")])])}),[],!1,null,null,null);t.default=s.exports}}]);